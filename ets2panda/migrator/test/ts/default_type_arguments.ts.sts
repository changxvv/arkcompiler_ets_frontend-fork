/*
 * Copyright (c) 2022-2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

open class A  {
}

interface I<T> {
    f(t : T): void ;
}

open class B implements I<A>  {
    public s : String ;
    public f(a : A): void {
    }
    public constructor(s : String) {
        this.s = s;
    }

}

open class C<T, U>  {
    public t : T ;
    public u : U ;
    public constructor(t : T, u : U) {
        this.t = t;
        this.u = u;
    }

}

open class D extends C<B, B>  {
    public f(): I<A>[] {
        return [this.t, this.u];
    }
}

function foo(): C<A, B> {
    return new C<A, B>(new A(), new B(""));
}
function bar<T, U>(t : T, u : U): C<T, U> {
    return new C<T, U>(t, u);
}
function zoo(): void {
    bar<A, B>(new A(), new B("bar"));
    bar<String, A>("bar", new A());
    bar<D, B>(new D(new B("D"), new B("")), new B("bar"));
    bar<I<A>, A>(new B("bar"), new A());
}
