/*
 * Copyright (c) 2022-2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

enum E {
    A = 1,
    B,
    C,
    D = 20,
    F = D * C,
    G = B + F,
    H,
    __InvalidName__ /* Original enum member name: "100\tI" */,
    __migrator_ident_100 /* Original enum member name: 100 */
}
class Constants  {
    public static readonly pi = 3.1415;
    public static readonly e = 2.7182;
    public static readonly h = 6.626e-34;
    public static readonly au = 149597870700;
} /* Untranslated enum declaration: enum Empty { } */

enum MyEnum {
    __InvalidName__ /* Original enum member name: "100\tA" */,
    __InvalidName__ /* Original enum member name: [foo()] */
}
class Computed  {
    public static readonly A = 0;
    public static readonly B = 20;
    public static readonly C = bar();
    public static readonly D = 30;
    public static readonly E = 31;
    public static readonly F = 40.4;
    public static readonly G = 41.4;
    public static readonly H = 42.4;
}

class Strings  {
    public static readonly SUCCESS = "OK";
    public static readonly FAILURE = "Fail";
    public static readonly GREETING = "Hello!";
}

class Mixed  {
    public static readonly A = 1;
    public static readonly B = 2;
    public static readonly C = "string";
    public static readonly D = "another string";
    public static readonly E = A + B;
    public static readonly F = 1;
    public static readonly G = 200;
}

function foo(): Symbol {
    return new __UnknownType__ /* Symbol */("foo");
    enum Local {
        A,
        B = 100,
        C
    }
    __untranslated_statement( /* enum Empty {    } */);
}
function bar(): Double {
    return 100;
}
