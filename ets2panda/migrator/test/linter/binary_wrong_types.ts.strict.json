{
    "copyright": [
        "Copyright (c) 2022-2023 Huawei Device Co., Ltd.",
        "Licensed under the Apache License, Version 2.0 (the 'License');",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an 'AS IS' BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "nodes": [
        {
            "line": 23,
            "column": 10,
            "problem": "LogicalWithNonBoolean"
        },
        {
            "line": 24,
            "column": 10,
            "problem": "LogicalWithNonBoolean"
        },
        {
            "line": 25,
            "column": 10,
            "problem": "LogicalWithNonBoolean"
        },
        {
            "line": 28,
            "column": 10,
            "problem": "LogicalWithNonBoolean"
        },
        {
            "line": 28,
            "column": 11,
            "problem": "UnaryArithmNotNumber"
        },
        {
            "line": 29,
            "column": 10,
            "problem": "LogicalWithNonBoolean"
        },
        {
            "line": 30,
            "column": 10,
            "problem": "LogicalWithNonBoolean"
        },
        {
            "line": 33,
            "column": 1,
            "problem": "TopLevelStmt"
        },
        {
            "line": 34,
            "column": 1,
            "problem": "TopLevelStmt"
        },
        {
            "line": 35,
            "column": 1,
            "problem": "TopLevelStmt"
        },
        {
            "line": 36,
            "column": 1,
            "problem": "TopLevelStmt"
        },
        {
            "line": 37,
            "column": 1,
            "problem": "TopLevelStmt"
        },
        {
            "line": 38,
            "column": 1,
            "problem": "TopLevelStmt"
        },
        {
            "line": 42,
            "column": 13,
            "problem": "AnyType"
        },
        {
            "line": 48,
            "column": 12,
            "problem": "AddWithWrongType"
        },
        {
            "line": 49,
            "column": 12,
            "problem": "AddWithWrongType"
        },
        {
            "line": 54,
            "column": 14,
            "problem": "EnumMemberWithInitializer"
        },
        {
            "line": 54,
            "column": 25,
            "problem": "EnumMemberWithInitializer"
        },
        {
            "line": 55,
            "column": 14,
            "problem": "EnumMemberWithInitializer"
        },
        {
            "line": 55,
            "column": 25,
            "problem": "EnumMemberWithInitializer"
        },
        {
            "line": 58,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 59,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 60,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 62,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 63,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 64,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 66,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 67,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 68,
            "column": 10,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 83,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 84,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 85,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 87,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 88,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 89,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 91,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 92,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 93,
            "column": 11,
            "problem": "BitOpWithWrongType"
        },
        {
            "line": 96,
            "column": 13,
            "problem": "CommaOperator"
        }
    ]
}