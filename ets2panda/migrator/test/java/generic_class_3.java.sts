/*
 * Copyright (c) 2022-2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.ohos.migrator.test.java;

import * from "std/math/math";
interface Fun<T, R> {
    apply(arg : T): R ;
}

open class C  {
    open size(): Int {
        return 0;
    }
    open size(arg : Object): Int {
        return 1;
    }
    open size(arg : C): Int {
        return 2;
    }
    open class H  {
        open size(): Int {
            return 3;
        }
    }

    h : H = new H();
    private interface Func<C, R> {
        apply(c : C): R ;
    }

    open test1(): void {
        let f1 : Func<C, Int> = (c : C): Int => c.size();
        System.out.print(f1.apply(this));
    }
    open test2(): void {
        let f1 : Func<H, Int> = (h : H): Int => h.size();
        System.out.print(f1.apply(h));
    }
}

open class Main  {
    public static main(args : String[]): void {
        let c : C = new C();
        c.test1();
        c.test2();
    }
}

