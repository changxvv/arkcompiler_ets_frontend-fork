-------------------------
node:  AnotherClassA
type:  AnotherClassA
type:  export class AnotherClassA {}
-------------------------
node:  AnotherClassB
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  AnotherDefaultClass
type:  default
type:  export default class AnotherDefaultClass{}
-------------------------
node:  ClassE
type:  ClassE
type:  export class ClassE {}
-------------------------
node:  ClassA
type:  ClassA
type:  class ClassA {}
-------------------------
node:  InstanceA
type:  ClassA
type:  class ClassA {}
-------------------------
node:  ClassA
type:  ClassA
type:  class ClassA {}
-------------------------
node:  InstanceB
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  AnotherClassB
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  defaultC
type:  defaultC
type:  class defaultC {}
-------------------------
node:  defaultC
type:  defaultC
type:  class defaultC {}
-------------------------
node:  ClassA
type:  ClassA
type:  class ClassA {}
-------------------------
node:  da
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  DefaultClassA
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  ita
type:  AnotherClassA
type:  export class AnotherClassA {}
-------------------------
node:  Imported
type:  "/home/zhuoli/code/OpenHarmonyOS/ark/ts2abc/local_test/import_test/test_export"
type:  import {
    AnotherClassB,
    AnotherClassB as ClassC
} from "./test_another_export";

// 1. ExportDeclaration
// 1.1 re-export
export * as anotherExport from "./test_another_export";
export { AnotherClassA } from "./test_another_export";
export { default as anotherDefaultClass} from "./test_another_export";

// 1.2 named exporting via a clause
export { ClassC, ClassC as ClassD }; //  exporte an imported class

// 2. ExportKeyword
// 2.1 inline named exports - ClassDeclaration
export class ClassE {}
// export default class {}

// 2.2 inline named exports - VariableStatements
class ClassA {}
export let InstanceA = new ClassA();
export let InstanceB = new AnotherClassB();
// export default cLass AnotherDefaultClass{};

// 3. ExportAssignment - default export
class defaultC {}
// export default defaultC;
export default {defaultC, ClassA}

-------------------------
node:  AnotherClassA
type:  AnotherClassA
type:  export class AnotherClassA {}
-------------------------
node:  ae
type:  AnotherClassA
type:  export class AnotherClassA {}
-------------------------
node:  anotherImport
type:  "/home/zhuoli/code/OpenHarmonyOS/ark/ts2abc/local_test/import_test/test_another_export"
type:  export class AnotherClassA {}
export class AnotherClassB {}

// export default class declarations
export default class AnotherDefaultClass{};
-------------------------
node:  AnotherClassA
type:  AnotherClassA
type:  export class AnotherClassA {}
-------------------------
node:  ia
type:  ClassA
type:  class ClassA {}
-------------------------
node:  InstanceA
type:  ClassA
type:  class ClassA {}
-------------------------
node:  ib
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  InstanceB
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  cddd
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  ClassDDD
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  dat
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  defaultAlt
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  dcat
type:  default
type:  export default class AnotherDefaultClass{}
-------------------------
node:  defualtClassAlt
type:  default
type:  export default class AnotherDefaultClass{}
-------------------------
node:  dcb
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  DefaultClassB
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  italt
type:  AnotherClassA
type:  export class AnotherClassA {}
-------------------------
node:  importedAlt
type:  "/home/zhuoli/code/OpenHarmonyOS/ark/ts2abc/local_test/import_test/test_export"
type:  import {
    AnotherClassB,
    AnotherClassB as ClassC
} from "./test_another_export";

// 1. ExportDeclaration
// 1.1 re-export
export * as anotherExport from "./test_another_export";
export { AnotherClassA } from "./test_another_export";
export { default as anotherDefaultClass} from "./test_another_export";

// 1.2 named exporting via a clause
export { ClassC, ClassC as ClassD }; //  exporte an imported class

// 2. ExportKeyword
// 2.1 inline named exports - ClassDeclaration
export class ClassE {}
// export default class {}

// 2.2 inline named exports - VariableStatements
class ClassA {}
export let InstanceA = new ClassA();
export let InstanceB = new AnotherClassB();
// export default cLass AnotherDefaultClass{};

// 3. ExportAssignment - default export
class defaultC {}
// export default defaultC;
export default {defaultC, ClassA}

-------------------------
node:  AnotherClassA
type:  AnotherClassA
type:  export class AnotherClassA {}
-------------------------
node:  dcc
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  DefaultClassC
type:  __object
type:  {defaultC, ClassA}
-------------------------
node:  cc
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  ClassC
type:  AnotherClassB
type:  export class AnotherClassB {}
-------------------------
node:  cd
type:  ClassE
type:  export class ClassE {}
-------------------------
node:  ClassE
type:  ClassE
type:  export class ClassE {}
