diff --git a/test262/config.py b/test262/config.py
index 9af9c3b5..ee2a0ff9 100755
--- a/test262/config.py
+++ b/test262/config.py
@@ -100,5 +100,663 @@ MODULE_FILES_LIST = [
     "parse-err-return.js",
     "parse-err-yield.js",
     "dup-bound-names.js",
-    "await-module.js"
+    "await-module.js",
+    "comment-multi-line-html-close.js",
+    "comment-single-line-html-close.js",
+    "comment-single-line-html-open.js",
+    "early-dup-export-as-star-as.js",
+    "early-dup-export-decl.js",
+    "early-dup-export-dflt-id.js",
+    "early-dup-export-dflt.js",
+    "early-dup-export-id-as.js",
+    "early-dup-export-id.js",
+    "export-star-as-dflt.js",
+    "early-dup-lables.js",
+    "early-dup-lex.js",
+    "early-export-global.js",
+    "early-export-ill-formed-string.js",
+    "early-export-unresolvable.js",
+    "early-import-arguments.js",
+    "early-import-as-arguments.js",
+    "early-import-as-eval.js",
+    "early-import-eval.js",
+    "early-lex-and-var.js",
+    "early-new-target.js",
+    "early-strict-mode.js",
+    "early-super.js",
+    "early-undef-break.js",
+    "early-undef-continue.js",
+    "eval-export-cls-semi.js",
+    "eval-export-dflt-cls-anon.js",
+    "eval-export-dflt-cls-anon-semi.js",
+    "eval-export-dflt-cls-named.js",
+    "eval-export-dflt-cls-named-semi.js",
+    "eval-export-dflt-cls-name-meth.js",
+    "eval-export-dflt-expr-cls-anon.js",
+    "eval-export-dflt-expr-cls-named.js",
+    "eval-export-dflt-expr-cls-name-meth.js",
+    "eval-export-dflt-expr-err-eval.js",
+    "eval-export-dflt-expr-err-get-value.js",
+    "eval-export-dflt-expr-fn-anon.js",
+    "eval-export-dflt-expr-fn-named.js",
+    "eval-export-dflt-expr-gen-anon.js",
+    "eval-export-dflt-expr-gen-named.js",
+    "eval-export-dflt-expr-in.js",
+    "eval-export-dflt-fun-anon-semi.js",
+    "eval-export-dflt-fun-named-semi.js",
+    "eval-export-dflt-gen-anon-semi.js",
+    "eval-export-dflt-gen-named-semi.js",
+    "eval-export-fun-semi.js",
+    "eval-export-gen-semi.js",
+    "eval-gtbndng-indirect-trlng-comma_FIXTURE.js",
+    "eval-gtbndng-indirect-trlng-comma.js",
+    "eval-gtbndng-indirect-update-as_FIXTURE.js",
+    "eval-gtbndng-indirect-update-as.js",
+    "eval-gtbndng-indirect-update-dflt_FIXTURE.js",
+    "eval-gtbndng-indirect-update-dflt.js",
+    "eval-gtbndng-indirect-update_FIXTURE.js",
+    "eval-gtbndng-indirect-update.js",
+    "eval-gtbndng-local-bndng-cls.js",
+    "eval-gtbndng-local-bndng-const.js",
+    "eval-gtbndng-local-bndng-let.js",
+    "eval-gtbndng-local-bndng-var.js",
+    "eval-rqstd-abrupt-err-type_FIXTURE.js",
+    "eval-rqstd-abrupt-err-uri_FIXTURE.js",
+    "eval-rqstd-abrupt.js",
+    "eval-rqstd-once_FIXTURE.js",
+    "eval-rqstd-once.js",
+    "eval-rqstd-order-1_FIXTURE.js",
+    "eval-rqstd-order-2_FIXTURE.js",
+    "eval-rqstd-order-3_FIXTURE.js",
+    "eval-rqstd-order-4_FIXTURE.js",
+    "eval-rqstd-order-5_FIXTURE.js",
+    "eval-rqstd-order-6_FIXTURE.js",
+    "eval-rqstd-order-7_FIXTURE.js",
+    "eval-rqstd-order-8_FIXTURE.js",
+    "eval-rqstd-order-9_FIXTURE.js",
+    "eval-rqstd-order.js",
+    "eval-self-abrupt.js",
+    "eval-self-once.js",
+    "eval-this.js",
+    "export-default-asyncfunction-declaration-binding-exists.js",
+    "export-default-asyncfunction-declaration-binding.js",
+    "export-default-asyncgenerator-declaration-binding-exists.js",
+    "export-default-asyncgenerator-declaration-binding.js",
+    "export-default-function-declaration-binding-exists.js",
+    "export-default-function-declaration-binding.js",
+    "export-default-generator-declaration-binding-exists.js",
+    "export-default-generator-declaration-binding.js",
+    "export-expname-binding-string.js",
+    "export-expname_FIXTURE.js",
+    "export-expname-from-as-unpaired-surrogate.js",
+    "export-expname-from-binding-string.js",
+    "export-expname-from-star.js",
+    "export-expname-from-star-string.js",
+    "export-expname-from-star-unpaired-surrogate.js",
+    "export-expname-from-string-binding.js",
+    "export-expname-from-string.js",
+    "export-expname-from-string-string.js",
+    "export-expname-from-unpaired-surrogate.js",
+    "export-expname-import-string-binding.js",
+    "export-expname-import-unpaired-surrogate.js",
+    "export-expname-string-binding.js",
+    "export-expname-unpaired-surrogate.js",
+    "export-star-as-dflt_FIXTURE.js",
+    "export-star-as-dflt.js",
+    "instn-iee-bndng-cls_FIXTURE.js",
+    "instn-iee-bndng-cls.js",
+    "instn-iee-bndng-const_FIXTURE.js",
+    "instn-iee-bndng-const.js",
+    "instn-iee-bndng-fun_FIXTURE.js",
+    "instn-iee-bndng-fun.js",
+    "instn-iee-bndng-gen_FIXTURE.js",
+    "instn-iee-bndng-gen.js",
+    "instn-iee-bndng-let_FIXTURE.js",
+    "instn-iee-bndng-let.js",
+    "instn-iee-bndng-var_FIXTURE.js",
+    "instn-iee-bndng-var.js",
+    "instn-iee-err-ambiguous-1_FIXTURE.js",
+    "instn-iee-err-ambiguous-2_FIXTURE.js",
+    "instn-iee-err-ambiguous-as.js",
+    "instn-iee-err-ambiguous_FIXTURE.js",
+    "instn-iee-err-ambiguous.js",
+    "instn-iee-err-circular-as.js",
+    "instn-iee-err-circular_FIXTURE.js",
+    "instn-iee-err-circular.js",
+    "instn-iee-err-dflt-thru-star-as.js",
+    "instn-iee-err-dflt-thru-star-dflt_FIXTURE.js",
+    "instn-iee-err-dflt-thru-star-int_FIXTURE.js",
+    "instn-iee-err-dflt-thru-star.js",
+    "instn-iee-err-not-found-as.js",
+    "instn-iee-err-not-found-empty_FIXTURE.js",
+    "instn-iee-err-not-found.js",
+    "instn-iee-iee-cycle-2_FIXTURE.js",
+    "instn-iee-iee-cycle.js",
+    "instn-iee-star-cycle-2_FIXTURE.js",
+    "instn-iee-star-cycle-indirect-x_FIXTURE.js",
+    "instn-iee-star-cycle.js",
+    "instn-iee-trlng-comma_FIXTURE.js",
+    "instn-iee-trlng-comma.js",
+    "instn-local-bndng-cls.js",
+    "instn-local-bndng-const.js",
+    "instn-local-bndng-export-cls.js",
+    "instn-local-bndng-export-const.js",
+    "instn-local-bndng-export-fun.js",
+    "instn-local-bndng-export-gen.js",
+    "instn-local-bndng-export-let.js",
+    "instn-local-bndng-export-var.js",
+    "instn-local-bndng-for-dup.js",
+    "instn-local-bndng-for.js",
+    "instn-local-bndng-fun.js",
+    "instn-local-bndng-gen.js",
+    "instn-local-bndng-let.js",
+    "instn-local-bndng-var-dup.js",
+    "instn-local-bndng-var.js",
+    "instn-named-bndng-cls.js",
+    "instn-named-bndng-const.js",
+    "instn-named-bndng-dflt-cls.js",
+    "instn-named-bndng-dflt-expr.js",
+    "instn-named-bndng-dflt-fun-anon.js",
+    "instn-named-bndng-dflt-fun-named.js",
+    "instn-named-bndng-dflt-gen-anon.js",
+    "instn-named-bndng-dflt-gen-named.js",
+    "instn-named-bndng-dflt-named.js",
+    "instn-named-bndng-dflt-star.js",
+    "instn-named-bndng-fun.js",
+    "instn-named-bndng-gen.js",
+    "instn-named-bndng-let.js",
+    "instn-named-bndng-trlng-comma.js",
+    "instn-named-bndng-var.js",
+    "instn-named-err-ambiguous-1_FIXTURE.js",
+    "instn-named-err-ambiguous-2_FIXTURE.js",
+    "instn-named-err-ambiguous-as.js",
+    "instn-named-err-ambiguous_FIXTURE.js",
+    "instn-named-err-ambiguous.js",
+    "instn-named-err-dflt-thru-star-as.js",
+    "instn-named-err-dflt-thru-star-dflt_FIXTURE.js",
+    "instn-named-err-dflt-thru-star-dflt.js",
+    "instn-named-err-dflt-thru-star-int_FIXTURE.js",
+    "instn-named-err-not-found-as.js",
+    "instn-named-err-not-found-dflt.js",
+    "instn-named-err-not-found-empty_FIXTURE.js",
+    "instn-named-err-not-found.js",
+    "instn-named-id-name.js",
+    "instn-named-iee-cycle-2_FIXTURE.js",
+    "instn-named-iee-cycle.js",
+    "instn-named-star-cycle-2_FIXTURE.js",
+    "instn-named-star-cycle-indirect-x_FIXTURE.js",
+    "instn-named-star-cycle.js",
+    "instn-once.js",
+    "instn-resolve-empty-export_FIXTURE.js",
+    "instn-resolve-empty-export.js",
+    "instn-resolve-empty-import_FIXTURE.js",
+    "instn-resolve-empty-import.js",
+    "instn-resolve-err-syntax-1_FIXTURE.js",
+    "instn-resolve-err-syntax-1.js",
+    "instn-resolve-err-syntax-2_FIXTURE.js",
+    "instn-resolve-err-syntax-2.js",
+    "instn-resolve-order-depth-child_FIXTURE.js",
+    "instn-resolve-order-depth.js",
+    "instn-resolve-order-depth-reference_FIXTURE.js",
+    "instn-resolve-order-depth-syntax_FIXTURE.js",
+    "instn-resolve-order-src.js",
+    "instn-resolve-order-src-reference_FIXTURE.js",
+    "instn-resolve-order-src-syntax_FIXTURE.js",
+    "instn-resolve-order-src-valid_FIXTURE.js",
+    "instn-same-global.js",
+    "instn-same-global-set_FIXTURE.js",
+    "instn-star-ambiguous-1_FIXTURE.js",
+    "instn-star-ambiguous-2_FIXTURE.js",
+    "instn-star-ambiguous_FIXTURE.js",
+    "instn-star-ambiguous.js",
+    "instn-star-as-props-dflt-skip.js",
+    "instn-star-binding.js",
+    "instn-star-equality.js",
+    "instn-star-equality-other_FIXTURE.js",
+    "instn-star-err-not-found-empty_FIXTURE.js",
+    "instn-star-err-not-found-faulty_FIXTURE.js",
+    "instn-star-err-not-found.js",
+    "instn-star-id-name.js",
+    "instn-star-iee-cycle-2_FIXTURE.js",
+    "instn-star-iee-cycle.js",
+    "instn-star-props-circular-a_FIXTURE.js",
+    "instn-star-props-circular-b_FIXTURE.js",
+    "instn-star-props-circular.js",
+    "instn-star-props-dflt-keep-indirect-def_FIXTURE.js",
+    "instn-star-props-dflt-keep-indirect.js",
+    "instn-star-props-dflt-keep-indirect-reexport_FIXTURE.js",
+    "instn-star-props-dflt-keep-local.js",
+    "instn-star-props-dflt-keep-local-named_FIXTURE.js",
+    "instn-star-props-dflt-keep-local-prod_FIXTURE.js",
+    "instn-star-props-dflt-skip.js",
+    "instn-star-props-dflt-skip-named_FIXTURE.js",
+    "instn-star-props-dflt-skip-prod_FIXTURE.js",
+    "instn-star-props-dflt-skip-star-as-named-end_FIXTURE.js",
+    "instn-star-props-dflt-skip-star-as-named_FIXTURE.js",
+    "instn-star-props-dflt-skip-star-as-prod-end_FIXTURE.js",
+    "instn-star-props-dflt-skip-star-as-prod_FIXTURE.js",
+    "instn-star-props-dflt-skip-star-named_FIXTURE.js",
+    "instn-star-props-dflt-skip-star-prod_FIXTURE.js",
+    "instn-star-props-nrml-1_FIXTURE.js",
+    "instn-star-props-nrml-indirect_FIXTURE.js",
+    "instn-star-props-nrml.js",
+    "instn-star-props-nrml-star_FIXTURE.js",
+    "instn-star-star-cycle-2_FIXTURE.js",
+    "instn-star-star-cycle-indirect-x_FIXTURE.js",
+    "instn-star-star-cycle.js",
+    "instn-uniq-env-rec.js",
+    "instn-uniq-env-rec-other_FIXTURE.js",
+    "invalid-private-names-call-expression-bad-reference.js",
+    "invalid-private-names-call-expression-this.js",
+    "invalid-private-names-member-expression-bad-reference.js",
+    "invalid-private-names-member-expression-this.js",
+    "parse-err-decl-pos-export-arrow-function.js",
+    "parse-err-decl-pos-export-block-stmt.js",
+    "parse-err-decl-pos-export-block-stmt-list.js",
+    "parse-err-decl-pos-export-class-decl-meth.js",
+    "parse-err-decl-pos-export-class-decl-method-gen.js",
+    "parse-err-decl-pos-export-class-decl-method-gen-static.js",
+    "parse-err-decl-pos-export-class-decl-meth-static.js",
+    "parse-err-decl-pos-export-class-expr-meth-gen.js",
+    "parse-err-decl-pos-export-class-expr-meth-gen-static.js",
+    "parse-err-decl-pos-export-class-expr-meth.js",
+    "parse-err-decl-pos-export-class-expr-meth-static.js",
+    "parse-err-decl-pos-export-do-while.js",
+    "parse-err-decl-pos-export-for-const.js",
+    "parse-err-decl-pos-export-for-in-const.js",
+    "parse-err-decl-pos-export-for-in-let.js",
+    "parse-err-decl-pos-export-for-in-lhs.js",
+    "parse-err-decl-pos-export-for-in-var.js",
+    "parse-err-decl-pos-export-for-let.js",
+    "parse-err-decl-pos-export-for-lhs.js",
+    "parse-err-decl-pos-export-for-of-const.js",
+    "parse-err-decl-pos-export-for-of-let.js",
+    "parse-err-decl-pos-export-for-of-lhs.js",
+    "parse-err-decl-pos-export-for-of-var.js",
+    "parse-err-decl-pos-export-for-var.js",
+    "parse-err-decl-pos-export-function-decl.js",
+    "parse-err-decl-pos-export-function-expr.js",
+    "parse-err-decl-pos-export-generator-decl.js",
+    "parse-err-decl-pos-export-generator-expr.js",
+    "parse-err-decl-pos-export-if-else.js",
+    "parse-err-decl-pos-export-if-if.js",
+    "parse-err-decl-pos-export-labeled.js",
+    "parse-err-decl-pos-export-object-gen-method.js",
+    "parse-err-decl-pos-export-object-getter.js",
+    "parse-err-decl-pos-export-object-method.js",
+    "parse-err-decl-pos-export-object-setter.js",
+    "parse-err-decl-pos-export-switch-case-dflt.js",
+    "parse-err-decl-pos-export-switch-case.js",
+    "parse-err-decl-pos-export-switch-dftl.js",
+    "parse-err-decl-pos-export-try-catch-finally.js",
+    "parse-err-decl-pos-export-try-catch.js",
+    "parse-err-decl-pos-export-try-finally.js",
+    "parse-err-decl-pos-export-try-try.js",
+    "parse-err-decl-pos-export-while.js",
+    "parse-err-decl-pos-import-arrow-function.js",
+    "parse-err-decl-pos-import-block-stmt.js",
+    "parse-err-decl-pos-import-block-stmt-list.js",
+    "parse-err-decl-pos-import-class-decl-meth.js",
+    "parse-err-decl-pos-import-class-decl-method-gen.js",
+    "parse-err-decl-pos-import-class-decl-method-gen-static.js",
+    "parse-err-decl-pos-import-class-decl-meth-static.js",
+    "parse-err-decl-pos-import-class-expr-meth-gen.js",
+    "parse-err-decl-pos-import-class-expr-meth-gen-static.js",
+    "parse-err-decl-pos-import-class-expr-meth.js",
+    "parse-err-decl-pos-import-class-expr-meth-static.js",
+    "parse-err-decl-pos-import-do-while.js",
+    "parse-err-decl-pos-import-for-const.js",
+    "parse-err-decl-pos-import-for-in-const.js",
+    "parse-err-decl-pos-import-for-in-let.js",
+    "parse-err-decl-pos-import-for-in-lhs.js",
+    "parse-err-decl-pos-import-for-in-var.js",
+    "parse-err-decl-pos-import-for-let.js",
+    "parse-err-decl-pos-import-for-lhs.js",
+    "parse-err-decl-pos-import-for-of-const.js",
+    "parse-err-decl-pos-import-for-of-let.js",
+    "parse-err-decl-pos-import-for-of-lhs.js",
+    "parse-err-decl-pos-import-for-of-var.js",
+    "parse-err-decl-pos-import-for-var.js",
+    "parse-err-decl-pos-import-function-decl.js",
+    "parse-err-decl-pos-import-function-expr.js",
+    "parse-err-decl-pos-import-generator-decl.js",
+    "parse-err-decl-pos-import-generator-expr.js",
+    "parse-err-decl-pos-import-if-else.js",
+    "parse-err-decl-pos-import-if-if.js",
+    "parse-err-decl-pos-import-labeled.js",
+    "parse-err-decl-pos-import-object-gen-method.js",
+    "parse-err-decl-pos-import-object-getter.js",
+    "parse-err-decl-pos-import-object-method.js",
+    "parse-err-decl-pos-import-object-setter.js",
+    "parse-err-decl-pos-import-switch-case-dflt.js",
+    "parse-err-decl-pos-import-switch-case.js",
+    "parse-err-decl-pos-import-switch-dftl.js",
+    "parse-err-decl-pos-import-try-catch-finally.js",
+    "parse-err-decl-pos-import-try-catch.js",
+    "parse-err-decl-pos-import-try-finally.js",
+    "parse-err-decl-pos-import-try-try.js",
+    "parse-err-decl-pos-import-while.js",
+    "parse-err-export-dflt-const.js",
+    "parse-err-export-dflt-expr.js",
+    "parse-err-export-dflt-let.js",
+    "parse-err-export-dflt-var.js",
+    "parse-err-hoist-lex-fun.js",
+    "parse-err-hoist-lex-gen.js",
+    "parse-err-invoke-anon-fun-decl.js",
+    "parse-err-invoke-anon-gen-decl.js",
+    "parse-err-return.js",
+    "parse-err-semi-dflt-expr.js",
+    "parse-err-semi-export-star.js",
+    "parse-err-semi-named-export-from.js",
+    "parse-err-semi-named-export.js",
+    "parse-err-semi-name-space-export.js",
+    "parse-err-syntax-1.js",
+    "parse-err-syntax-2.js",
+    "parse-err-yield.js",
+    "parse-export-empty.js",
+    "private-identifiers-not-empty.js",
+    "privatename-not-valid-earlyerr-module-1.js",
+    "privatename-not-valid-earlyerr-module-2.js",
+    "privatename-not-valid-earlyerr-module-3.js",
+    "privatename-not-valid-earlyerr-module-4.js",
+    "privatename-not-valid-earlyerr-module-5.js",
+    "privatename-not-valid-earlyerr-module-6.js",
+    "privatename-not-valid-earlyerr-module-7.js",
+    "privatename-not-valid-earlyerr-module-8.js",
+    "privatename-valid-no-earlyerr.js",
+    "verify-dfs-a_FIXTURE.js",
+    "verify-dfs-b_FIXTURE.js",
+    "verify-dfs.js",
+    "Symbol.iterator.js",
+    "Symbol.toStringTag.js",
+    "define-own-property.js",
+    "delete-exported-init.js",
+    "delete-exported-uninit.js",
+    "delete-non-exported.js",
+    "enumerate-binding-uninit.js",
+    "get-nested-namespace-dflt-skip.js",
+    "get-nested-namespace-dflt-skip-named-end_FIXTURE.js",
+    "get-nested-namespace-dflt-skip-named_FIXTURE.js",
+    "get-nested-namespace-dflt-skip-prod-end_FIXTURE.js",
+    "get-nested-namespace-dflt-skip-prod_FIXTURE.js",
+    "get-nested-namespace-props-nrml-1_FIXTURE.js",
+    "get-nested-namespace-props-nrml-2_FIXTURE.js",
+    "get-nested-namespace-props-nrml-3_FIXTURE.js",
+    "get-nested-namespace-props-nrml.js",
+    "get-own-property-str-found-init.js",
+    "get-own-property-str-found-uninit.js",
+    "get-own-property-str-not-found.js",
+    "get-own-property-sym.js",
+    "get-prototype-of.js",
+    "get-str-found-init.js",
+    "get-str-found-uninit.js",
+    "get-str-initialize.js",
+    "get-str-not-found.js",
+    "get-str-update.js",
+    "get-sym-found.js",
+    "get-sym-not-found.js",
+    "has-property-str-found-init.js",
+    "has-property-str-found-uninit.js",
+    "has-property-str-not-found.js",
+    "has-property-sym-found.js",
+    "has-property-sym-not-found.js",
+    "is-extensible.js",
+    "object-hasOwnProperty-binding-uninit.js",
+    "object-keys-binding-uninit.js",
+    "object-propertyIsEnumerable-binding-uninit.js",
+    "own-property-keys-binding-types_FIXTURE.js",
+    "own-property-keys-binding-types.js",
+    "own-property-keys-sort.js",
+    "prevent-extensions.js",
+    "set.js",
+    "set-prototype-of.js",
+    "set-prototype-of-null.js",
+    "await-awaits-thenable-not-callable.js",
+    "await-awaits-thenables.js",
+    "await-awaits-thenables-that-throw.js",
+    "await-dynamic-import-rejection.js",
+    "await-dynamic-import-resolution.js",
+    "await-expr-func-expression.js",
+    "await-expr-new-expr.js",
+    "await-expr-new-expr-reject.js",
+    "await-expr-regexp.js",
+    "await-expr-reject-throws.js",
+    "await-expr-resolution.js",
+    "await-void-expr.js",
+    "dynamic-import-rejection.js",
+    "dynamic-import-resolution.js",
+    "early-errors-await-not-simple-assignment-target.js",
+    "if-await-expr.js",
+    "module-async-import-async-resolution-ticks.js",
+    "module-import-rejection-body_FIXTURE.js",
+    "module-import-rejection-body.js",
+    "module-import-rejection_FIXTURE.js",
+    "module-import-rejection.js",
+    "module-import-rejection-tick_FIXTURE.js",
+    "module-import-rejection-tick.js",
+    "module-import-resolution_FIXTURE.js",
+    "module-import-resolution.js",
+    "module-import-unwrapped_FIXTURE.js",
+    "module-import-unwrapped.js",
+    "module-self-import-async-resolution-ticks.js",
+    "module-sync-import-async-resolution-ticks.js",
+    "new-await.js",
+    "new-await-parens.js",
+    "new-await-script-code.js",
+    "no-operand.js",
+    "top-level-ticks-2.js",
+    "top-level-ticks.js",
+    "void-await-expr.js",
+    "while-dynamic-evaluation.js",
+    "await-expr-dyn-import.js",
+    "block-await-expr-array-literal.js",
+    "block-await-expr-func-expression.js",
+    "block-await-expr-identifier.js",
+    "block-await-expr-literal-number.js",
+    "block-await-expr-literal-string.js",
+    "block-await-expr-nested.js",
+    "block-await-expr-new-expr.js",
+    "block-await-expr-null.js",
+    "block-await-expr-obj-literal.js",
+    "block-await-expr-regexp.js",
+    "block-await-expr-template-literal.js",
+    "block-await-expr-this.js",
+    "catch-parameter.js",
+    "early-does-not-propagate-to-fn-declaration-body.js",
+    "early-does-not-propagate-to-fn-declaration-params.js",
+    "early-does-not-propagate-to-fn-expr-body.js",
+    "early-does-not-propagate-to-fn-expr-params.js",
+    "early-no-escaped-await.js",
+    "export-class-decl-await-expr-array-literal.js",
+    "export-class-decl-await-expr-func-expression.js",
+    "export-class-decl-await-expr-identifier.js",
+    "export-class-decl-await-expr-literal-number.js",
+    "export-class-decl-await-expr-literal-string.js",
+    "export-class-decl-await-expr-nested.js",
+    "export-class-decl-await-expr-new-expr.js",
+    "export-class-decl-await-expr-null.js",
+    "export-class-decl-await-expr-obj-literal.js",
+    "export-class-decl-await-expr-regexp.js",
+    "export-class-decl-await-expr-template-literal.js",
+    "export-class-decl-await-expr-this.js",
+    "export-dflt-assign-expr-await-expr-array-literal.js",
+    "export-dflt-assign-expr-await-expr-func-expression.js",
+    "export-dflt-assign-expr-await-expr-identifier.js",
+    "export-dflt-assign-expr-await-expr-literal-number.js",
+    "export-dflt-assign-expr-await-expr-literal-string.js",
+    "export-dflt-assign-expr-await-expr-nested.js",
+    "export-dflt-assign-expr-await-expr-new-expr.js",
+    "export-dflt-assign-expr-await-expr-null.js",
+    "export-dflt-assign-expr-await-expr-obj-literal.js",
+    "export-dflt-assign-expr-await-expr-regexp.js",
+    "export-dflt-assign-expr-await-expr-template-literal.js",
+    "export-dflt-assign-expr-await-expr-this.js",
+    "export-dft-class-decl-await-expr-array-literal.js",
+    "export-dft-class-decl-await-expr-func-expression.js",
+    "export-dft-class-decl-await-expr-identifier.js",
+    "export-dft-class-decl-await-expr-literal-number.js",
+    "export-dft-class-decl-await-expr-literal-string.js",
+    "export-dft-class-decl-await-expr-nested.js",
+    "export-dft-class-decl-await-expr-new-expr.js",
+    "export-dft-class-decl-await-expr-null.js",
+    "export-dft-class-decl-await-expr-obj-literal.js",
+    "export-dft-class-decl-await-expr-regexp.js",
+    "export-dft-class-decl-await-expr-template-literal.js",
+    "export-dft-class-decl-await-expr-this.js",
+    "export-lex-decl-await-expr-array-literal.js",
+    "export-lex-decl-await-expr-func-expression.js",
+    "export-lex-decl-await-expr-identifier.js",
+    "export-lex-decl-await-expr-literal-number.js",
+    "export-lex-decl-await-expr-literal-string.js",
+    "export-lex-decl-await-expr-nested.js",
+    "export-lex-decl-await-expr-new-expr.js",
+    "export-lex-decl-await-expr-null.js",
+    "export-lex-decl-await-expr-obj-literal.js",
+    "export-lex-decl-await-expr-regexp.js",
+    "export-lex-decl-await-expr-template-literal.js",
+    "export-lex-decl-await-expr-this.js",
+    "export-var-await-expr-array-literal.js",
+    "export-var-await-expr-func-expression.js",
+    "export-var-await-expr-identifier.js",
+    "export-var-await-expr-literal-number.js",
+    "export-var-await-expr-literal-string.js",
+    "export-var-await-expr-nested.js",
+    "export-var-await-expr-new-expr.js",
+    "export-var-await-expr-null.js",
+    "export-var-await-expr-obj-literal.js",
+    "export-var-await-expr-regexp.js",
+    "export-var-await-expr-template-literal.js",
+    "export-var-await-expr-this.js",
+    "for-await-await-expr-array-literal.js",
+    "for-await-await-expr-func-expression.js",
+    "for-await-await-expr-identifier.js",
+    "for-await-await-expr-literal-number.js",
+    "for-await-await-expr-literal-string.js",
+    "for-await-await-expr-nested.js",
+    "for-await-await-expr-new-expr.js",
+    "for-await-await-expr-null.js",
+    "for-await-await-expr-obj-literal.js",
+    "for-await-await-expr-regexp.js",
+    "for-await-await-expr-template-literal.js",
+    "for-await-await-expr-this.js",
+    "for-await-expr-array-literal.js",
+    "for-await-expr-func-expression.js",
+    "for-await-expr-identifier.js",
+    "for-await-expr-literal-number.js",
+    "for-await-expr-literal-string.js",
+    "for-await-expr-nested.js",
+    "for-await-expr-new-expr.js",
+    "for-await-expr-null.js",
+    "for-await-expr-obj-literal.js",
+    "for-await-expr-regexp.js",
+    "for-await-expr-template-literal.js",
+    "for-await-expr-this.js",
+    "for-in-await-expr-array-literal.js",
+    "for-in-await-expr-func-expression.js",
+    "for-in-await-expr-identifier.js",
+    "for-in-await-expr-literal-number.js",
+    "for-in-await-expr-literal-string.js",
+    "for-in-await-expr-nested.js",
+    "for-in-await-expr-new-expr.js",
+    "for-in-await-expr-null.js",
+    "for-in-await-expr-obj-literal.js",
+    "for-in-await-expr-regexp.js",
+    "for-in-await-expr-template-literal.js",
+    "for-in-await-expr-this.js",
+    "for-of-await-expr-array-literal.js",
+    "for-of-await-expr-func-expression.js",
+    "for-of-await-expr-identifier.js",
+    "for-of-await-expr-literal-number.js",
+    "for-of-await-expr-literal-string.js",
+    "for-of-await-expr-nested.js",
+    "for-of-await-expr-new-expr.js",
+    "for-of-await-expr-null.js",
+    "for-of-await-expr-obj-literal.js",
+    "for-of-await-expr-regexp.js",
+    "for-of-await-expr-template-literal.js",
+    "for-of-await-expr-this.js",
+    "if-block-await-expr-array-literal.js",
+    "if-block-await-expr-func-expression.js",
+    "if-block-await-expr-identifier.js",
+    "if-block-await-expr-literal-number.js",
+    "if-block-await-expr-literal-string.js",
+    "if-block-await-expr-nested.js",
+    "if-block-await-expr-new-expr.js",
+    "if-block-await-expr-null.js",
+    "if-block-await-expr-obj-literal.js",
+    "if-block-await-expr-regexp.js",
+    "if-block-await-expr-template-literal.js",
+    "if-block-await-expr-this.js",
+    "if-expr-await-expr-array-literal.js",
+    "if-expr-await-expr-func-expression.js",
+    "if-expr-await-expr-identifier.js",
+    "if-expr-await-expr-literal-number.js",
+    "if-expr-await-expr-literal-string.js",
+    "if-expr-await-expr-nested.js",
+    "if-expr-await-expr-new-expr.js",
+    "if-expr-await-expr-null.js",
+    "if-expr-await-expr-obj-literal.js",
+    "if-expr-await-expr-regexp.js",
+    "if-expr-await-expr-template-literal.js",
+    "if-expr-await-expr-this.js",
+    "top-level-await-expr-array-literal.js",
+    "top-level-await-expr-func-expression.js",
+    "top-level-await-expr-identifier.js",
+    "top-level-await-expr-literal-number.js",
+    "top-level-await-expr-literal-string.js",
+    "top-level-await-expr-nested.js",
+    "top-level-await-expr-new-expr.js",
+    "top-level-await-expr-null.js",
+    "top-level-await-expr-obj-literal.js",
+    "top-level-await-expr-regexp.js",
+    "top-level-await-expr-template-literal.js",
+    "top-level-await-expr-this.js",
+    "try-await-expr-array-literal.js",
+    "try-await-expr-func-expression.js",
+    "try-await-expr-identifier.js",
+    "try-await-expr-literal-number.js",
+    "try-await-expr-literal-string.js",
+    "try-await-expr-nested.js",
+    "try-await-expr-new-expr.js",
+    "try-await-expr-null.js",
+    "try-await-expr-obj-literal.js",
+    "try-await-expr-regexp.js",
+    "try-await-expr-template-literal.js",
+    "try-await-expr-this.js",
+    "typeof-await-expr-array-literal.js",
+    "typeof-await-expr-func-expression.js",
+    "typeof-await-expr-identifier.js",
+    "typeof-await-expr-literal-number.js",
+    "typeof-await-expr-literal-string.js",
+    "typeof-await-expr-nested.js",
+    "typeof-await-expr-new-expr.js",
+    "typeof-await-expr-null.js",
+    "typeof-await-expr-obj-literal.js",
+    "typeof-await-expr-regexp.js",
+    "typeof-await-expr-template-literal.js",
+    "typeof-await-expr-this.js",
+    "void-await-expr-array-literal.js",
+    "void-await-expr-func-expression.js",
+    "void-await-expr-identifier.js",
+    "void-await-expr-literal-number.js",
+    "void-await-expr-literal-string.js",
+    "void-await-expr-nested.js",
+    "void-await-expr-new-expr.js",
+    "void-await-expr-null.js",
+    "void-await-expr-obj-literal.js",
+    "void-await-expr-regexp.js",
+    "void-await-expr-template-literal.js",
+    "void-await-expr-this.js",
+    "while-await-expr-array-literal.js",
+    "while-await-expr-func-expression.js",
+    "while-await-expr-identifier.js",
+    "while-await-expr-literal-number.js",
+    "while-await-expr-literal-string.js",
+    "while-await-expr-nested.js",
+    "while-await-expr-new-expr.js",
+    "while-await-expr-null.js",
+    "while-await-expr-obj-literal.js",
+    "while-await-expr-regexp.js",
+    "while-await-expr-template-literal.js",
+    "while-await-expr-this.js"
 ]
diff --git a/test262/es2015_tests.txt b/test262/es2015_tests.txt
index 92acde0d..69c4954f 100755
--- a/test262/es2015_tests.txt
+++ b/test262/es2015_tests.txt
@@ -4405,6 +4405,664 @@ built-ins/WeakSet/iterator-close-after-add-failure.js
 built-ins/WeakSet/prototype-of-weakset.js
 language/expressions/generators/default-proto.js
 language/statements/generators/default-proto.js
+language/module-code/comment-multi-line-html-close.js
+language/module-code/comment-single-line-html-close.js
+language/module-code/comment-single-line-html-open.js
+language/module-code/early-dup-export-as-star-as.js
+language/module-code/early-dup-export-decl.js
+language/module-code/early-dup-export-dflt-id.js
+language/module-code/early-dup-export-dflt.js
+language/module-code/early-dup-export-id-as.js
+language/module-code/early-dup-export-id.js
+language/module-code/early-dup-language/module-code/export-star-as-dflt.js
+language/module-code/early-dup-lables.js
+language/module-code/early-dup-lex.js
+language/module-code/early-export-global.js
+language/module-code/early-export-ill-formed-string.js
+language/module-code/early-export-unresolvable.js
+language/module-code/early-import-arguments.js
+language/module-code/early-import-as-arguments.js
+language/module-code/early-import-as-eval.js
+language/module-code/early-import-eval.js
+language/module-code/early-lex-and-var.js
+language/module-code/early-new-target.js
+language/module-code/early-strict-mode.js
+language/module-code/early-super.js
+language/module-code/early-undef-break.js
+language/module-code/early-undef-continue.js
+language/module-code/eval-export-cls-semi.js
+language/module-code/eval-export-dflt-cls-anon.js
+language/module-code/eval-export-dflt-cls-anon-semi.js
+language/module-code/eval-export-dflt-cls-named.js
+language/module-code/eval-export-dflt-cls-named-semi.js
+language/module-code/eval-export-dflt-cls-name-meth.js
+language/module-code/eval-export-dflt-expr-cls-anon.js
+language/module-code/eval-export-dflt-expr-cls-named.js
+language/module-code/eval-export-dflt-expr-cls-name-meth.js
+language/module-code/eval-export-dflt-expr-err-eval.js
+language/module-code/eval-export-dflt-expr-err-get-value.js
+language/module-code/eval-export-dflt-expr-fn-anon.js
+language/module-code/eval-export-dflt-expr-fn-named.js
+language/module-code/eval-export-dflt-expr-gen-anon.js
+language/module-code/eval-export-dflt-expr-gen-named.js
+language/module-code/eval-export-dflt-expr-in.js
+language/module-code/eval-export-dflt-fun-anon-semi.js
+language/module-code/eval-export-dflt-fun-named-semi.js
+language/module-code/eval-export-dflt-gen-anon-semi.js
+language/module-code/eval-export-dflt-gen-named-semi.js
+language/module-code/eval-export-fun-semi.js
+language/module-code/eval-export-gen-semi.js
+language/module-code/eval-gtbndng-indirect-trlng-comma_FIXTURE.js
+language/module-code/eval-gtbndng-indirect-trlng-comma.js
+language/module-code/eval-gtbndng-indirect-update-as_FIXTURE.js
+language/module-code/eval-gtbndng-indirect-update-as.js
+language/module-code/eval-gtbndng-indirect-update-dflt_FIXTURE.js
+language/module-code/eval-gtbndng-indirect-update-dflt.js
+language/module-code/eval-gtbndng-indirect-update_FIXTURE.js
+language/module-code/eval-gtbndng-indirect-update.js
+language/module-code/eval-gtbndng-local-bndng-cls.js
+language/module-code/eval-gtbndng-local-bndng-const.js
+language/module-code/eval-gtbndng-local-bndng-let.js
+language/module-code/eval-gtbndng-local-bndng-var.js
+language/module-code/eval-rqstd-abrupt-err-type_FIXTURE.js
+language/module-code/eval-rqstd-abrupt-err-uri_FIXTURE.js
+language/module-code/eval-rqstd-abrupt.js
+language/module-code/eval-rqstd-once_FIXTURE.js
+language/module-code/eval-rqstd-once.js
+language/module-code/eval-rqstd-order-1_FIXTURE.js
+language/module-code/eval-rqstd-order-2_FIXTURE.js
+language/module-code/eval-rqstd-order-3_FIXTURE.js
+language/module-code/eval-rqstd-order-4_FIXTURE.js
+language/module-code/eval-rqstd-order-5_FIXTURE.js
+language/module-code/eval-rqstd-order-6_FIXTURE.js
+language/module-code/eval-rqstd-order-7_FIXTURE.js
+language/module-code/eval-rqstd-order-8_FIXTURE.js
+language/module-code/eval-rqstd-order-9_FIXTURE.js
+language/module-code/eval-rqstd-order.js
+language/module-code/eval-self-abrupt.js
+language/module-code/eval-self-once.js
+language/module-code/eval-this.js
+language/module-code/export-default-asyncfunction-declaration-binding-exists.js
+language/module-code/export-default-asyncfunction-declaration-binding.js
+language/module-code/export-default-asyncgenerator-declaration-binding-exists.js
+language/module-code/export-default-asyncgenerator-declaration-binding.js
+language/module-code/export-default-function-declaration-binding-exists.js
+language/module-code/export-default-function-declaration-binding.js
+language/module-code/export-default-generator-declaration-binding-exists.js
+language/module-code/export-default-generator-declaration-binding.js
+language/module-code/export-expname-binding-string.js
+language/module-code/export-expname_FIXTURE.js
+language/module-code/export-expname-from-as-unpaired-surrogate.js
+language/module-code/export-expname-from-binding-string.js
+language/module-code/export-expname-from-star.js
+language/module-code/export-expname-from-star-string.js
+language/module-code/export-expname-from-star-unpaired-surrogate.js
+language/module-code/export-expname-from-string-binding.js
+language/module-code/export-expname-from-string.js
+language/module-code/export-expname-from-string-string.js
+language/module-code/export-expname-from-unpaired-surrogate.js
+language/module-code/export-expname-import-string-binding.js
+language/module-code/export-expname-import-unpaired-surrogate.js
+language/module-code/export-expname-string-binding.js
+language/module-code/export-expname-unpaired-surrogate.js
+language/module-code/export-star-as-dflt_FIXTURE.js
+language/module-code/export-star-as-dflt.js
+language/module-code/instn-iee-bndng-cls_FIXTURE.js
+language/module-code/instn-iee-bndng-cls.js
+language/module-code/instn-iee-bndng-const_FIXTURE.js
+language/module-code/instn-iee-bndng-const.js
+language/module-code/instn-iee-bndng-fun_FIXTURE.js
+language/module-code/instn-iee-bndng-fun.js
+language/module-code/instn-iee-bndng-gen_FIXTURE.js
+language/module-code/instn-iee-bndng-gen.js
+language/module-code/instn-iee-bndng-let_FIXTURE.js
+language/module-code/instn-iee-bndng-let.js
+language/module-code/instn-iee-bndng-var_FIXTURE.js
+language/module-code/instn-iee-bndng-var.js
+language/module-code/instn-iee-err-ambiguous-1_FIXTURE.js
+language/module-code/instn-iee-err-ambiguous-2_FIXTURE.js
+language/module-code/instn-iee-err-ambiguous-as.js
+language/module-code/instn-iee-err-ambiguous_FIXTURE.js
+language/module-code/instn-iee-err-ambiguous.js
+language/module-code/instn-iee-err-circular-as.js
+language/module-code/instn-iee-err-circular_FIXTURE.js
+language/module-code/instn-iee-err-circular.js
+language/module-code/instn-iee-err-dflt-thru-star-as.js
+language/module-code/instn-iee-err-dflt-thru-star-dflt_FIXTURE.js
+language/module-code/instn-iee-err-dflt-thru-star-int_FIXTURE.js
+language/module-code/instn-iee-err-dflt-thru-star.js
+language/module-code/instn-iee-err-not-found-as.js
+language/module-code/instn-iee-err-not-found-empty_FIXTURE.js
+language/module-code/instn-iee-err-not-found.js
+language/module-code/instn-iee-iee-cycle-2_FIXTURE.js
+language/module-code/instn-iee-iee-cycle.js
+language/module-code/instn-iee-star-cycle-2_FIXTURE.js
+language/module-code/instn-iee-star-cycle-indirect-x_FIXTURE.js
+language/module-code/instn-iee-star-cycle.js
+language/module-code/instn-iee-trlng-comma_FIXTURE.js
+language/module-code/instn-iee-trlng-comma.js
+language/module-code/instn-local-bndng-cls.js
+language/module-code/instn-local-bndng-const.js
+language/module-code/instn-local-bndng-export-cls.js
+language/module-code/instn-local-bndng-export-const.js
+language/module-code/instn-local-bndng-export-fun.js
+language/module-code/instn-local-bndng-export-gen.js
+language/module-code/instn-local-bndng-export-let.js
+language/module-code/instn-local-bndng-export-var.js
+language/module-code/instn-local-bndng-for-dup.js
+language/module-code/instn-local-bndng-for.js
+language/module-code/instn-local-bndng-fun.js
+language/module-code/instn-local-bndng-gen.js
+language/module-code/instn-local-bndng-let.js
+language/module-code/instn-local-bndng-var-dup.js
+language/module-code/instn-local-bndng-var.js
+language/module-code/instn-named-bndng-cls.js
+language/module-code/instn-named-bndng-const.js
+language/module-code/instn-named-bndng-dflt-cls.js
+language/module-code/instn-named-bndng-dflt-expr.js
+language/module-code/instn-named-bndng-dflt-fun-anon.js
+language/module-code/instn-named-bndng-dflt-fun-named.js
+language/module-code/instn-named-bndng-dflt-gen-anon.js
+language/module-code/instn-named-bndng-dflt-gen-named.js
+language/module-code/instn-named-bndng-dflt-named.js
+language/module-code/instn-named-bndng-dflt-star.js
+language/module-code/instn-named-bndng-fun.js
+language/module-code/instn-named-bndng-gen.js
+language/module-code/instn-named-bndng-let.js
+language/module-code/instn-named-bndng-trlng-comma.js
+language/module-code/instn-named-bndng-var.js
+language/module-code/instn-named-err-ambiguous-1_FIXTURE.js
+language/module-code/instn-named-err-ambiguous-2_FIXTURE.js
+language/module-code/instn-named-err-ambiguous-as.js
+language/module-code/instn-named-err-ambiguous_FIXTURE.js
+language/module-code/instn-named-err-ambiguous.js
+language/module-code/instn-named-err-dflt-thru-star-as.js
+language/module-code/instn-named-err-dflt-thru-star-dflt_FIXTURE.js
+language/module-code/instn-named-err-dflt-thru-star-dflt.js
+language/module-code/instn-named-err-dflt-thru-star-int_FIXTURE.js
+language/module-code/instn-named-err-not-found-as.js
+language/module-code/instn-named-err-not-found-dflt.js
+language/module-code/instn-named-err-not-found-empty_FIXTURE.js
+language/module-code/instn-named-err-not-found.js
+language/module-code/instn-named-id-name.js
+language/module-code/instn-named-iee-cycle-2_FIXTURE.js
+language/module-code/instn-named-iee-cycle.js
+language/module-code/instn-named-star-cycle-2_FIXTURE.js
+language/module-code/instn-named-star-cycle-indirect-x_FIXTURE.js
+language/module-code/instn-named-star-cycle.js
+language/module-code/instn-once.js
+language/module-code/instn-resolve-empty-export_FIXTURE.js
+language/module-code/instn-resolve-empty-export.js
+language/module-code/instn-resolve-empty-import_FIXTURE.js
+language/module-code/instn-resolve-empty-import.js
+language/module-code/instn-resolve-err-syntax-1_FIXTURE.js
+language/module-code/instn-resolve-err-syntax-1.js
+language/module-code/instn-resolve-err-syntax-2_FIXTURE.js
+language/module-code/instn-resolve-err-syntax-2.js
+language/module-code/instn-resolve-order-depth-child_FIXTURE.js
+language/module-code/instn-resolve-order-depth.js
+language/module-code/instn-resolve-order-depth-reference_FIXTURE.js
+language/module-code/instn-resolve-order-depth-syntax_FIXTURE.js
+language/module-code/instn-resolve-order-src.js
+language/module-code/instn-resolve-order-src-reference_FIXTURE.js
+language/module-code/instn-resolve-order-src-syntax_FIXTURE.js
+language/module-code/instn-resolve-order-src-valid_FIXTURE.js
+language/module-code/instn-same-global.js
+language/module-code/instn-same-global-set_FIXTURE.js
+language/module-code/instn-star-ambiguous-1_FIXTURE.js
+language/module-code/instn-star-ambiguous-2_FIXTURE.js
+language/module-code/instn-star-ambiguous_FIXTURE.js
+language/module-code/instn-star-ambiguous.js
+language/module-code/instn-star-as-props-dflt-skip.js
+language/module-code/instn-star-binding.js
+language/module-code/instn-star-equality.js
+language/module-code/instn-star-equality-other_FIXTURE.js
+language/module-code/instn-star-err-not-found-empty_FIXTURE.js
+language/module-code/instn-star-err-not-found-faulty_FIXTURE.js
+language/module-code/instn-star-err-not-found.js
+language/module-code/instn-star-id-name.js
+language/module-code/instn-star-iee-cycle-2_FIXTURE.js
+language/module-code/instn-star-iee-cycle.js
+language/module-code/instn-star-props-circular-a_FIXTURE.js
+language/module-code/instn-star-props-circular-b_FIXTURE.js
+language/module-code/instn-star-props-circular.js
+language/module-code/instn-star-props-dflt-keep-indirect-def_FIXTURE.js
+language/module-code/instn-star-props-dflt-keep-indirect.js
+language/module-code/instn-star-props-dflt-keep-indirect-reexport_FIXTURE.js
+language/module-code/instn-star-props-dflt-keep-local.js
+language/module-code/instn-star-props-dflt-keep-local-named_FIXTURE.js
+language/module-code/instn-star-props-dflt-keep-local-prod_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip.js
+language/module-code/instn-star-props-dflt-skip-named_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip-prod_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip-star-as-named-end_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip-star-as-named_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip-star-as-prod-end_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip-star-as-prod_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip-star-named_FIXTURE.js
+language/module-code/instn-star-props-dflt-skip-star-prod_FIXTURE.js
+language/module-code/instn-star-props-nrml-1_FIXTURE.js
+language/module-code/instn-star-props-nrml-indirect_FIXTURE.js
+language/module-code/instn-star-props-nrml.js
+language/module-code/instn-star-props-nrml-star_FIXTURE.js
+language/module-code/instn-star-star-cycle-2_FIXTURE.js
+language/module-code/instn-star-star-cycle-indirect-x_FIXTURE.js
+language/module-code/instn-star-star-cycle.js
+language/module-code/instn-uniq-env-rec.js
+language/module-code/instn-uniq-env-rec-other_FIXTURE.js
+language/module-code/invalid-private-names-call-expression-bad-reference.js
+language/module-code/invalid-private-names-call-expression-this.js
+language/module-code/invalid-private-names-member-expression-bad-reference.js
+language/module-code/invalid-private-names-member-expression-this.js
+language/module-code/parse-err-decl-pos-export-arrow-function.js
+language/module-code/parse-err-decl-pos-export-block-stmt.js
+language/module-code/parse-err-decl-pos-export-block-stmt-list.js
+language/module-code/parse-err-decl-pos-export-class-decl-meth.js
+language/module-code/parse-err-decl-pos-export-class-decl-method-gen.js
+language/module-code/parse-err-decl-pos-export-class-decl-method-gen-static.js
+language/module-code/parse-err-decl-pos-export-class-decl-meth-static.js
+language/module-code/parse-err-decl-pos-export-class-expr-meth-gen.js
+language/module-code/parse-err-decl-pos-export-class-expr-meth-gen-static.js
+language/module-code/parse-err-decl-pos-export-class-expr-meth.js
+language/module-code/parse-err-decl-pos-export-class-expr-meth-static.js
+language/module-code/parse-err-decl-pos-export-do-while.js
+language/module-code/parse-err-decl-pos-export-for-const.js
+language/module-code/parse-err-decl-pos-export-for-in-const.js
+language/module-code/parse-err-decl-pos-export-for-in-let.js
+language/module-code/parse-err-decl-pos-export-for-in-lhs.js
+language/module-code/parse-err-decl-pos-export-for-in-var.js
+language/module-code/parse-err-decl-pos-export-for-let.js
+language/module-code/parse-err-decl-pos-export-for-lhs.js
+language/module-code/parse-err-decl-pos-export-for-of-const.js
+language/module-code/parse-err-decl-pos-export-for-of-let.js
+language/module-code/parse-err-decl-pos-export-for-of-lhs.js
+language/module-code/parse-err-decl-pos-export-for-of-var.js
+language/module-code/parse-err-decl-pos-export-for-var.js
+language/module-code/parse-err-decl-pos-export-function-decl.js
+language/module-code/parse-err-decl-pos-export-function-expr.js
+language/module-code/parse-err-decl-pos-export-generator-decl.js
+language/module-code/parse-err-decl-pos-export-generator-expr.js
+language/module-code/parse-err-decl-pos-export-if-else.js
+language/module-code/parse-err-decl-pos-export-if-if.js
+language/module-code/parse-err-decl-pos-export-labeled.js
+language/module-code/parse-err-decl-pos-export-object-gen-method.js
+language/module-code/parse-err-decl-pos-export-object-getter.js
+language/module-code/parse-err-decl-pos-export-object-method.js
+language/module-code/parse-err-decl-pos-export-object-setter.js
+language/module-code/parse-err-decl-pos-export-switch-case-dflt.js
+language/module-code/parse-err-decl-pos-export-switch-case.js
+language/module-code/parse-err-decl-pos-export-switch-dftl.js
+language/module-code/parse-err-decl-pos-export-try-catch-finally.js
+language/module-code/parse-err-decl-pos-export-try-catch.js
+language/module-code/parse-err-decl-pos-export-try-finally.js
+language/module-code/parse-err-decl-pos-export-try-try.js
+language/module-code/parse-err-decl-pos-export-while.js
+language/module-code/parse-err-decl-pos-import-arrow-function.js
+language/module-code/parse-err-decl-pos-import-block-stmt.js
+language/module-code/parse-err-decl-pos-import-block-stmt-list.js
+language/module-code/parse-err-decl-pos-import-class-decl-meth.js
+language/module-code/parse-err-decl-pos-import-class-decl-method-gen.js
+language/module-code/parse-err-decl-pos-import-class-decl-method-gen-static.js
+language/module-code/parse-err-decl-pos-import-class-decl-meth-static.js
+language/module-code/parse-err-decl-pos-import-class-expr-meth-gen.js
+language/module-code/parse-err-decl-pos-import-class-expr-meth-gen-static.js
+language/module-code/parse-err-decl-pos-import-class-expr-meth.js
+language/module-code/parse-err-decl-pos-import-class-expr-meth-static.js
+language/module-code/parse-err-decl-pos-import-do-while.js
+language/module-code/parse-err-decl-pos-import-for-const.js
+language/module-code/parse-err-decl-pos-import-for-in-const.js
+language/module-code/parse-err-decl-pos-import-for-in-let.js
+language/module-code/parse-err-decl-pos-import-for-in-lhs.js
+language/module-code/parse-err-decl-pos-import-for-in-var.js
+language/module-code/parse-err-decl-pos-import-for-let.js
+language/module-code/parse-err-decl-pos-import-for-lhs.js
+language/module-code/parse-err-decl-pos-import-for-of-const.js
+language/module-code/parse-err-decl-pos-import-for-of-let.js
+language/module-code/parse-err-decl-pos-import-for-of-lhs.js
+language/module-code/parse-err-decl-pos-import-for-of-var.js
+language/module-code/parse-err-decl-pos-import-for-var.js
+language/module-code/parse-err-decl-pos-import-function-decl.js
+language/module-code/parse-err-decl-pos-import-function-expr.js
+language/module-code/parse-err-decl-pos-import-generator-decl.js
+language/module-code/parse-err-decl-pos-import-generator-expr.js
+language/module-code/parse-err-decl-pos-import-if-else.js
+language/module-code/parse-err-decl-pos-import-if-if.js
+language/module-code/parse-err-decl-pos-import-labeled.js
+language/module-code/parse-err-decl-pos-import-object-gen-method.js
+language/module-code/parse-err-decl-pos-import-object-getter.js
+language/module-code/parse-err-decl-pos-import-object-method.js
+language/module-code/parse-err-decl-pos-import-object-setter.js
+language/module-code/parse-err-decl-pos-import-switch-case-dflt.js
+language/module-code/parse-err-decl-pos-import-switch-case.js
+language/module-code/parse-err-decl-pos-import-switch-dftl.js
+language/module-code/parse-err-decl-pos-import-try-catch-finally.js
+language/module-code/parse-err-decl-pos-import-try-catch.js
+language/module-code/parse-err-decl-pos-import-try-finally.js
+language/module-code/parse-err-decl-pos-import-try-try.js
+language/module-code/parse-err-decl-pos-import-while.js
+language/module-code/parse-err-export-dflt-const.js
+language/module-code/parse-err-export-dflt-expr.js
+language/module-code/parse-err-export-dflt-let.js
+language/module-code/parse-err-export-dflt-var.js
+language/module-code/parse-err-hoist-lex-fun.js
+language/module-code/parse-err-hoist-lex-gen.js
+language/module-code/parse-err-invoke-anon-fun-decl.js
+language/module-code/parse-err-invoke-anon-gen-decl.js
+language/module-code/parse-err-return.js
+language/module-code/parse-err-semi-dflt-expr.js
+language/module-code/parse-err-semi-export-star.js
+language/module-code/parse-err-semi-named-export-from.js
+language/module-code/parse-err-semi-named-export.js
+language/module-code/parse-err-semi-name-space-export.js
+language/module-code/parse-err-syntax-1.js
+language/module-code/parse-err-syntax-2.js
+language/module-code/parse-err-yield.js
+language/module-code/parse-export-empty.js
+language/module-code/private-identifiers-not-empty.js
+language/module-code/privatename-not-valid-earlyerr-module-1.js
+language/module-code/privatename-not-valid-earlyerr-module-2.js
+language/module-code/privatename-not-valid-earlyerr-module-3.js
+language/module-code/privatename-not-valid-earlyerr-module-4.js
+language/module-code/privatename-not-valid-earlyerr-module-5.js
+language/module-code/privatename-not-valid-earlyerr-module-6.js
+language/module-code/privatename-not-valid-earlyerr-module-7.js
+language/module-code/privatename-not-valid-earlyerr-module-8.js
+language/module-code/privatename-valid-no-earlyerr.js
+language/module-code/verify-dfs-a_FIXTURE.js
+language/module-code/verify-dfs-b_FIXTURE.js
+language/module-code/verify-dfs.js
+language/module-code/namespace/Symbol.iterator.js
+language/module-code/namespace/Symbol.toStringTag.js
+language/module-code/namespace/internals/define-own-property.js
+language/module-code/namespace/internals/delete-exported-init.js
+language/module-code/namespace/internals/delete-exported-uninit.js
+language/module-code/namespace/internals/delete-non-exported.js
+language/module-code/namespace/internals/enumerate-binding-uninit.js
+language/module-code/namespace/internals/get-nested-namespace-dflt-skip.js
+language/module-code/namespace/internals/get-nested-namespace-dflt-skip-named-end_FIXTURE.js
+language/module-code/namespace/internals/get-nested-namespace-dflt-skip-named_FIXTURE.js
+language/module-code/namespace/internals/get-nested-namespace-dflt-skip-prod-end_FIXTURE.js
+language/module-code/namespace/internals/get-nested-namespace-dflt-skip-prod_FIXTURE.js
+language/module-code/namespace/internals/get-nested-namespace-props-nrml-1_FIXTURE.js
+language/module-code/namespace/internals/get-nested-namespace-props-nrml-2_FIXTURE.js
+language/module-code/namespace/internals/get-nested-namespace-props-nrml-3_FIXTURE.js
+language/module-code/namespace/internals/get-nested-namespace-props-nrml.js
+language/module-code/namespace/internals/get-own-property-str-found-init.js
+language/module-code/namespace/internals/get-own-property-str-found-uninit.js
+language/module-code/namespace/internals/get-own-property-str-not-found.js
+language/module-code/namespace/internals/get-own-property-sym.js
+language/module-code/namespace/internals/get-prototype-of.js
+language/module-code/namespace/internals/get-str-found-init.js
+language/module-code/namespace/internals/get-str-found-uninit.js
+language/module-code/namespace/internals/get-str-initialize.js
+language/module-code/namespace/internals/get-str-not-found.js
+language/module-code/namespace/internals/get-str-update.js
+language/module-code/namespace/internals/get-sym-found.js
+language/module-code/namespace/internals/get-sym-not-found.js
+language/module-code/namespace/internals/has-property-str-found-init.js
+language/module-code/namespace/internals/has-property-str-found-uninit.js
+language/module-code/namespace/internals/has-property-str-not-found.js
+language/module-code/namespace/internals/has-property-sym-found.js
+language/module-code/namespace/internals/has-property-sym-not-found.js
+language/module-code/namespace/internals/is-extensible.js
+language/module-code/namespace/internals/object-hasOwnProperty-binding-uninit.js
+language/module-code/namespace/internals/object-keys-binding-uninit.js
+language/module-code/namespace/internals/object-propertyIsEnumerable-binding-uninit.js
+language/module-code/namespace/internals/own-property-keys-binding-types_FIXTURE.js
+language/module-code/namespace/internals/own-property-keys-binding-types.js
+language/module-code/namespace/internals/own-property-keys-sort.js
+language/module-code/namespace/internals/prevent-extensions.js
+language/module-code/namespace/internals/set.js
+language/module-code/namespace/internals/set-prototype-of.js
+language/module-code/namespace/internals/set-prototype-of-null.js
+language/module-code/top-level-await/await-awaits-thenable-not-callable.js
+language/module-code/top-level-await/await-awaits-thenables.js
+language/module-code/top-level-await/await-awaits-thenables-that-throw.js
+language/module-code/top-level-await/await-dynamic-import-rejection.js
+language/module-code/top-level-await/await-dynamic-import-resolution.js
+language/module-code/top-level-await/await-expr-func-expression.js
+language/module-code/top-level-await/await-expr-new-expr.js
+language/module-code/top-level-await/await-expr-new-expr-reject.js
+language/module-code/top-level-await/await-expr-regexp.js
+language/module-code/top-level-await/await-expr-reject-throws.js
+language/module-code/top-level-await/await-expr-resolution.js
+language/module-code/top-level-await/await-void-expr.js
+language/module-code/top-level-await/dynamic-import-rejection.js
+language/module-code/top-level-await/dynamic-import-resolution.js
+language/module-code/top-level-await/early-errors-await-not-simple-assignment-target.js
+language/module-code/top-level-await/if-await-expr.js
+language/module-code/top-level-await/module-async-import-async-resolution-ticks.js
+language/module-code/top-level-await/module-import-rejection-body_FIXTURE.js
+language/module-code/top-level-await/module-import-rejection-body.js
+language/module-code/top-level-await/module-import-rejection_FIXTURE.js
+language/module-code/top-level-await/module-import-rejection.js
+language/module-code/top-level-await/module-import-rejection-tick_FIXTURE.js
+language/module-code/top-level-await/module-import-rejection-tick.js
+language/module-code/top-level-await/module-import-resolution_FIXTURE.js
+language/module-code/top-level-await/module-import-resolution.js
+language/module-code/top-level-await/module-import-unwrapped_FIXTURE.js
+language/module-code/top-level-await/module-import-unwrapped.js
+language/module-code/top-level-await/module-self-import-async-resolution-ticks.js
+language/module-code/top-level-await/module-sync-import-async-resolution-ticks.js
+language/module-code/top-level-await/new-await.js
+language/module-code/top-level-await/new-await-parens.js
+language/module-code/top-level-await/new-await-script-code.js
+language/module-code/top-level-await/no-operand.js
+language/module-code/top-level-await/top-level-ticks-2.js
+language/module-code/top-level-await/top-level-ticks.js
+language/module-code/top-level-await/void-await-expr.js
+language/module-code/top-level-await/while-dynamic-evaluation.js
+language/module-code/top-level-await/syntax/await-expr-dyn-import.js
+language/module-code/top-level-await/syntax/block-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/block-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/block-await-expr-identifier.js
+language/module-code/top-level-await/syntax/block-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/block-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/block-await-expr-nested.js
+language/module-code/top-level-await/syntax/block-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/block-await-expr-null.js
+language/module-code/top-level-await/syntax/block-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/block-await-expr-regexp.js
+language/module-code/top-level-await/syntax/block-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/block-await-expr-this.js
+language/module-code/top-level-await/syntax/catch-parameter.js
+language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-declaration-body.js
+language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-declaration-params.js
+language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-expr-body.js
+language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-expr-params.js
+language/module-code/top-level-await/syntax/early-no-escaped-await.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-identifier.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-nested.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-null.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-regexp.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/export-class-decl-await-expr-this.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-identifier.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-nested.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-null.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-regexp.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/export-dflt-assign-expr-await-expr-this.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-identifier.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-nested.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-null.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-regexp.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/export-dft-class-decl-await-expr-this.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-identifier.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-nested.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-null.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-regexp.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/export-lex-decl-await-expr-this.js
+language/module-code/top-level-await/syntax/export-var-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/export-var-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/export-var-await-expr-identifier.js
+language/module-code/top-level-await/syntax/export-var-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/export-var-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/export-var-await-expr-nested.js
+language/module-code/top-level-await/syntax/export-var-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/export-var-await-expr-null.js
+language/module-code/top-level-await/syntax/export-var-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/export-var-await-expr-regexp.js
+language/module-code/top-level-await/syntax/export-var-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/export-var-await-expr-this.js
+language/module-code/top-level-await/syntax/for-await-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/for-await-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/for-await-await-expr-identifier.js
+language/module-code/top-level-await/syntax/for-await-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/for-await-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/for-await-await-expr-nested.js
+language/module-code/top-level-await/syntax/for-await-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/for-await-await-expr-null.js
+language/module-code/top-level-await/syntax/for-await-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/for-await-await-expr-regexp.js
+language/module-code/top-level-await/syntax/for-await-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/for-await-await-expr-this.js
+language/module-code/top-level-await/syntax/for-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/for-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/for-await-expr-identifier.js
+language/module-code/top-level-await/syntax/for-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/for-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/for-await-expr-nested.js
+language/module-code/top-level-await/syntax/for-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/for-await-expr-null.js
+language/module-code/top-level-await/syntax/for-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/for-await-expr-regexp.js
+language/module-code/top-level-await/syntax/for-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/for-await-expr-this.js
+language/module-code/top-level-await/syntax/for-in-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/for-in-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/for-in-await-expr-identifier.js
+language/module-code/top-level-await/syntax/for-in-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/for-in-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/for-in-await-expr-nested.js
+language/module-code/top-level-await/syntax/for-in-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/for-in-await-expr-null.js
+language/module-code/top-level-await/syntax/for-in-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/for-in-await-expr-regexp.js
+language/module-code/top-level-await/syntax/for-in-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/for-in-await-expr-this.js
+language/module-code/top-level-await/syntax/for-of-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/for-of-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/for-of-await-expr-identifier.js
+language/module-code/top-level-await/syntax/for-of-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/for-of-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/for-of-await-expr-nested.js
+language/module-code/top-level-await/syntax/for-of-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/for-of-await-expr-null.js
+language/module-code/top-level-await/syntax/for-of-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/for-of-await-expr-regexp.js
+language/module-code/top-level-await/syntax/for-of-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/for-of-await-expr-this.js
+language/module-code/top-level-await/syntax/if-block-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/if-block-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/if-block-await-expr-identifier.js
+language/module-code/top-level-await/syntax/if-block-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/if-block-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/if-block-await-expr-nested.js
+language/module-code/top-level-await/syntax/if-block-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/if-block-await-expr-null.js
+language/module-code/top-level-await/syntax/if-block-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/if-block-await-expr-regexp.js
+language/module-code/top-level-await/syntax/if-block-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/if-block-await-expr-this.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-identifier.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-nested.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-null.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-regexp.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/if-expr-await-expr-this.js
+language/module-code/top-level-await/syntax/top-level-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/top-level-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/top-level-await-expr-identifier.js
+language/module-code/top-level-await/syntax/top-level-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/top-level-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/top-level-await-expr-nested.js
+language/module-code/top-level-await/syntax/top-level-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/top-level-await-expr-null.js
+language/module-code/top-level-await/syntax/top-level-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/top-level-await-expr-regexp.js
+language/module-code/top-level-await/syntax/top-level-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/top-level-await-expr-this.js
+language/module-code/top-level-await/syntax/try-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/try-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/try-await-expr-identifier.js
+language/module-code/top-level-await/syntax/try-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/try-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/try-await-expr-nested.js
+language/module-code/top-level-await/syntax/try-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/try-await-expr-null.js
+language/module-code/top-level-await/syntax/try-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/try-await-expr-regexp.js
+language/module-code/top-level-await/syntax/try-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/try-await-expr-this.js
+language/module-code/top-level-await/syntax/typeof-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/typeof-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/typeof-await-expr-identifier.js
+language/module-code/top-level-await/syntax/typeof-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/typeof-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/typeof-await-expr-nested.js
+language/module-code/top-level-await/syntax/typeof-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/typeof-await-expr-null.js
+language/module-code/top-level-await/syntax/typeof-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/typeof-await-expr-regexp.js
+language/module-code/top-level-await/syntax/typeof-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/typeof-await-expr-this.js
+language/module-code/top-level-await/syntax/void-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/void-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/void-await-expr-identifier.js
+language/module-code/top-level-await/syntax/void-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/void-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/void-await-expr-nested.js
+language/module-code/top-level-await/syntax/void-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/void-await-expr-null.js
+language/module-code/top-level-await/syntax/void-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/void-await-expr-regexp.js
+language/module-code/top-level-await/syntax/void-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/void-await-expr-this.js
+language/module-code/top-level-await/syntax/while-await-expr-array-literal.js
+language/module-code/top-level-await/syntax/while-await-expr-func-expression.js
+language/module-code/top-level-await/syntax/while-await-expr-identifier.js
+language/module-code/top-level-await/syntax/while-await-expr-literal-number.js
+language/module-code/top-level-await/syntax/while-await-expr-literal-string.js
+language/module-code/top-level-await/syntax/while-await-expr-nested.js
+language/module-code/top-level-await/syntax/while-await-expr-new-expr.js
+language/module-code/top-level-await/syntax/while-await-expr-null.js
+language/module-code/top-level-await/syntax/while-await-expr-obj-literal.js
+language/module-code/top-level-await/syntax/while-await-expr-regexp.js
+language/module-code/top-level-await/syntax/while-await-expr-template-literal.js
+language/module-code/top-level-await/syntax/while-await-expr-this.js
 built-ins/Symbol/replace/cross-realm.js
 built-ins/Symbol/split/cross-realm.js
 built-ins/Symbol/species/cross-realm.js
diff --git a/ts2panda/scripts/diagnosticMessages.json b/ts2panda/scripts/diagnosticMessages.json
index b4142d71..7a2aef60 100755
--- a/ts2panda/scripts/diagnosticMessages.json
+++ b/ts2panda/scripts/diagnosticMessages.json
@@ -243,6 +243,10 @@
         "category": "Error",
         "code": 1210
     },
+    "A class declaration without the 'default' modifier must have a name.": {
+        "category": "Error",
+        "code": 1211
+    },
     "Identifier expected. '{0}' is a reserved word in strict mode.": {
         "category": "Error",
         "code": 1212
@@ -423,6 +427,10 @@
         "category": "Error",
         "code": 2501
     },
+    "A module cannot have multiple default exports.": {
+        "category": "Error",
+        "code": 2528
+    },
     "The 'super' can only be referenced in members of derived classes or object literal expressions.": {
         "category": "Error",
         "code": 2660
diff --git a/ts2panda/src/addVariable2Scope.ts b/ts2panda/src/addVariable2Scope.ts
index c9f59db1..ed32f30b 100644
--- a/ts2panda/src/addVariable2Scope.ts
+++ b/ts2panda/src/addVariable2Scope.ts
@@ -25,6 +25,8 @@ import {
     FuncDecl,
     InitStatus,
     LetDecl,
+    ModuleDecl,
+    ModuleScope,
     Scope,
     VarDecl,
     VariableScope
@@ -103,6 +105,11 @@ export function addVariableToScope(recorder: Recorder) {
                 scope.add(decl.name, VarDeclarationKind.LET, InitStatus.UNINITIALIZED);
             } else if (decl instanceof ConstDecl) {
                 scope.add(decl.name, VarDeclarationKind.CONST, InitStatus.UNINITIALIZED);
+            } else if (decl instanceof ModuleDecl) {
+                if (!(scope instanceof ModuleScope)) {
+                    throw new Error("ModuleVariable can't exist without ModuleScope");
+                }
+                scope.add(decls[j].name, VarDeclarationKind.MODULE);
             } else if (decl instanceof FuncDecl) {
                 scope.add(decl.name, VarDeclarationKind.FUNCTION);
             } else if (decl instanceof CatchParameter) {
diff --git a/ts2panda/src/base/bcGenUtil.ts b/ts2panda/src/base/bcGenUtil.ts
index 4f195377..f4f77e10 100755
--- a/ts2panda/src/base/bcGenUtil.ts
+++ b/ts2panda/src/base/bcGenUtil.ts
@@ -43,7 +43,7 @@ import {
     EcmaGetiteratornext,
     EcmaGetnextpropname,
     EcmaGetpropiterator,
-    EcmaImportmodule,
+    EcmaGetModuleNamespace,
     EcmaIsfalse,
     EcmaIstrue,
     EcmaLdglobalvar,
@@ -367,8 +367,8 @@ export function ldSuperByValue(obj: VReg, prop: VReg): IRNode {
     return new EcmaLdsuperbyvalue(obj, prop);
 }
 
-export function importModule(name: string) {
-    return new EcmaImportmodule(name);
+export function getModuleNamespace(moduleIdx: number) {
+    return new EcmaGetModuleNamespace(moduleIdx);
 }
 
 export function loadModuleVarByName(name: string, module: VReg) {
diff --git a/ts2panda/src/compiler.ts b/ts2panda/src/compiler.ts
index c9230ee0..40571744 100755
--- a/ts2panda/src/compiler.ts
+++ b/ts2panda/src/compiler.ts
@@ -505,10 +505,10 @@ export class Compiler {
     }
 
     compileVariableDeclaration(decl: ts.VariableDeclaration, isExported: boolean = false) {
-        if (isExported) {
-            let name = jshelpers.getTextOfIdentifierOrLiteral(decl.name);
-            setVariableExported(name, this.getCurrentScope());
-        }
+        // if (isExported) {
+        //     let name = jshelpers.getTextOfIdentifierOrLiteral(decl.name);
+        //     setVariableExported(name, this.getCurrentScope());
+        // }
 
         let lref = LReference.generateLReference(this, decl.name, true);
         if (decl.initializer) {
@@ -690,7 +690,7 @@ export class Compiler {
                     let internalName = this.compilerDriver.getFuncInternalName(decl, this.recorder);
                     let env = this.getCurrentEnv();
                     this.pandaGen.defineFunction(NodeKind.FirstNodeOfFunction, <ts.FunctionDeclaration>decl, internalName, env);
-                    this.pandaGen.storeModuleVar(decl, "default");
+                    this.pandaGen.storeModuleVar(decl, "*default*");
                 } else {
                     throw new Error("SyntaxError: export function declaration cannot in other scope except ModuleScope");
                 }
@@ -702,7 +702,7 @@ export class Compiler {
 
     private compileExportAssignment(stmt: ts.ExportAssignment) {
         this.compileExpression(stmt.expression);
-        this.pandaGen.storeModuleVar(stmt, "default");
+        this.pandaGen.storeModuleVar(stmt, "*default*");
     }
 
     compileCondition(expr: ts.Expression, ifFalseLabel: Label) {
diff --git a/ts2panda/src/lexenv.ts b/ts2panda/src/lexenv.ts
index d4c1cc77..36ceab6c 100644
--- a/ts2panda/src/lexenv.ts
+++ b/ts2panda/src/lexenv.ts
@@ -165,7 +165,7 @@ export class VariableAcessStore extends VariableAccessBase {
         insns.push(storeAccumulator(bindVreg));
 
         if (v.isExportVar()) {
-            insns.push(storeModuleVariable(v.getExportedName()));
+            insns.push(storeModuleVariable(v.getName()));
         }
 
         return insns;
diff --git a/ts2panda/src/modules.ts b/ts2panda/src/modules.ts
index a4a8aff2..edb796dd 100644
--- a/ts2panda/src/modules.ts
+++ b/ts2panda/src/modules.ts
@@ -15,115 +15,259 @@
 
 import * as ts from "typescript";
 import { PandaGen } from "./pandagen";
-import jshelpers from "./jshelpers";
+// import jshelpers from "./jshelpers";
 import { LocalVariable } from "./variable";
 import { DiagnosticCode, DiagnosticError } from "./diagnostic";
 import { ModuleScope } from "./scope";
 
-export class ModuleStmt {
-    private node: ts.Node
-    private moduleRequest: string;
-    private namespace: string = "";
-    private bingdingNameMap: Map<string, string> = new Map<string, string>();
-    private isCopy: boolean = true;
+class Entry {
+    node: ts.Node;
+    exportName: string | undefined;
+    localName: string | undefined;
+    importName: string | undefined;
+    moduleRequest: number = -1;
 
-    constructor(node: ts.Node, moduleRequest: string = "") {
+    constructor(node: ts.Node, exportName: string | undefined, localName: string | undefined, importName: string | undefined, moduleRequest?: number) {
         this.node = node;
-        this.moduleRequest = moduleRequest;
+        this.exportName = exportName;
+        this.localName = localName;
+        this.importName = importName;
+        if (moduleRequest !== undefined) {
+            this.moduleRequest = moduleRequest;
+        }
+    }
+}
+
+export class SourceTextModuleRecord {
+    private moduleRequests: Array<string> = [];
+    private moduleRequestIdxMap: Map<string, number> = new Map<string, number>();
+
+    private regularImportEntries: Map<string, Entry> = new Map<string, Entry>();
+    private namespaceImportEntries: Array<Entry> = [];
+
+    private localExportEntries: Map<string, Array<Entry>> = new Map<string, Array<Entry>>();
+    private starExportEntries: Array<Entry> = [];
+    private indirectExportEntries: Array<Entry> = [];
+
+    addModuleRequest(moduleRequest: string): number {
+        if (this.moduleRequestIdxMap.has(moduleRequest)) {
+            return this.moduleRequestIdxMap.get(moduleRequest)!;
+        }
+        let index = this.moduleRequests.length;
+        this.moduleRequests.push(moduleRequest);
+        this.moduleRequestIdxMap.set(moduleRequest, index);
+        return index;
     }
 
-    getNode() {
-        return this.node;
+    // import x from "foo.js";
+    // import {x} from "foo.js";
+    // import {x as y} from "foo.js";
+    // import defaultExport from "foo.js"
+    addImportEntry(node: ts.Node, importName: string, localName: string, moduleRequest: string) {
+        let importEntry: Entry = new Entry(node, undefined, localName, importName, this.addModuleRequest(moduleRequest));
+        // We don't care if there's already an entry for this local name, as in that
+        // case we will report an error when declaring the variable.
+        this.regularImportEntries.set(localName, importEntry);
     }
 
-    getModuleRequest() {
-        return this.moduleRequest;
+    // import * as x from "foo.js";
+    addStarImportEntry(node: ts.Node, localName: string, moduleRequest: string) {
+        let starImportEntry: Entry = new Entry(node, undefined, localName, undefined, this.addModuleRequest(moduleRequest));
+        this.namespaceImportEntries.push(starImportEntry);
     }
 
-    addLocalName(localName: string, importName: string) {
-        if (this.bingdingNameMap.has(localName)) {
-            throw new DiagnosticError(this.node, DiagnosticCode.Duplicate_identifier_0, jshelpers.getSourceFileOfNode(this.node), [localName]);
+    // export {x};
+    // export {x as y};
+    // export VariableStatement
+    // export Declaration
+    // export default ...
+    addLocalExportEntry(node: ts.Node, exportName: string, localName: string) {
+        let localExportEntry: Entry = new Entry(node, exportName, localName, undefined);
+        if (this.localExportEntries.has(localName)) {
+            this.localExportEntries.get(localName)!.push(localExportEntry);
+        } else {
+            this.localExportEntries.set(localName, [localExportEntry]);
         }
-        this.bingdingNameMap.set(localName, importName);
     }
 
-    getBindingNameMap() {
-        return this.bingdingNameMap;
+    // export {x} from "foo.js";
+    // export {x as y} from "foo.js";
+    // import { x } from "foo.js"; export { x }
+    addIndirectExportEntry(node: ts.Node, importName: string, exportName: string, moduleRequest: string) {
+        let indirectExportEntry: Entry = new Entry(node, exportName, undefined, importName, this.addModuleRequest(moduleRequest));
+        this.indirectExportEntries.push(indirectExportEntry);
     }
 
-    setNameSpace(namespace: string) {
-        this.namespace = namespace;
+    // export * from "foo.js";
+    addStarExportEntry(node: ts.Node, moduleRequest: string) {
+        let starExportEntry: Entry = new Entry(node, undefined, undefined, undefined, this.addModuleRequest(moduleRequest));
+        this.starExportEntries.push(starExportEntry);
     }
 
-    getNameSpace() {
-        return this.namespace;
+    getModuleRequests() {
+        return this.moduleRequests;
     }
 
-    setCopyFlag(isCopy: boolean) {
-        this.isCopy = isCopy;
+    getRegularImportEntries() {
+        return this.regularImportEntries;
     }
 
-    getCopyFlag() {
-        return this.isCopy;
+    getNamespaceImportEntries() {
+        return this.namespaceImportEntries;
     }
-}
 
-export function setImport(importStmts: Array<ModuleStmt>, moduleScope: ModuleScope, pandagen: PandaGen) {
-    importStmts.forEach((importStmt) => {
-        pandagen.importModule(importStmt.getNode(), importStmt.getModuleRequest());
-        // import * as xxx from "a.js"
-        if (importStmt.getNameSpace()) {
-            let v = moduleScope.findLocal(importStmt.getNameSpace())!;
-            pandagen.storeAccToLexEnv(importStmt.getNode(), moduleScope, 0, v, true);
-            (<LocalVariable>v).initialize();
-        }
+    getLocalExportEntries() {
+        return this.localExportEntries;
+    }
 
-        // import { ... } from "a.js"
-        // import defaultExport, * as a from "a.js"
-        let moduleReg = pandagen.allocLocalVreg();
-        pandagen.storeAccumulator(importStmt.getNode(), moduleReg);
-
-        let bindingNameMap = importStmt.getBindingNameMap();
-        bindingNameMap.forEach((value: string, key: string) => {
-            let v = <LocalVariable>moduleScope.findLocal(key)!;
-            pandagen.loadModuleVariable(importStmt.getNode(), moduleReg, value);
-            pandagen.storeAccToLexEnv(importStmt.getNode(), moduleScope, 0, v, true);
-            (<LocalVariable>v).initialize();
-        });
-    })
-}
+    getStarExportEntries() {
+        return this.starExportEntries;
+    }
+
+    getIndirectExportEntries() {
+        return this.indirectExportEntries;
+    }
+
+    searchDuplicateExport(): Entry | undefined {
 
-export function setExportBinding(exportStmts: Array<ModuleStmt>, moduleScope: ModuleScope, pandagen: PandaGen) {
-    exportStmts.forEach((exportStmt) => {
-        if (exportStmt.getModuleRequest()) {
-            pandagen.importModule(exportStmt.getNode(), exportStmt.getModuleRequest());
-            let moduleReg = pandagen.allocLocalVreg();
-            pandagen.storeAccumulator(exportStmt.getNode(), moduleReg);
-
-            if (!exportStmt.getCopyFlag()) {
-                if (exportStmt.getNameSpace()) {
-                    pandagen.storeModuleVar(exportStmt.getNode(), exportStmt.getNameSpace());
-                }
-
-                let bindingNameMap = exportStmt.getBindingNameMap();
-                bindingNameMap.forEach((value: string, key: string) => {
-                    pandagen.loadModuleVariable(exportStmt.getNode(), moduleReg, value);
-                    pandagen.storeModuleVar(exportStmt.getNode(), key);
-                });
-            } else {
-                pandagen.copyModule(exportStmt.getNode(), moduleReg);
+    }
+
+    validateModuleRecordEntries(moduleScope: ModuleScope): boolean {
+        // check module is well-formed and report errors if not
+        {
+            let dupExportEntry: Entry | undefined = this.searchDuplicateExport();
+            if (dupExportEntry !== undefined) {
+
+                return false;
             }
-        } else {
-            let bindingNameMap = exportStmt.getBindingNameMap();
-            bindingNameMap.forEach((value: string, key: string) => {
-                let v = moduleScope.findLocal(value);
-                if (typeof v == 'undefined') {
-                    throw new DiagnosticError(exportStmt.getNode(), DiagnosticCode.Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module, jshelpers.getSourceFileOfNode(exportStmt.getNode()), [value]);
-                }
-
-                (<LocalVariable>v).setExport();
-                (<LocalVariable>v).setExportedName(key);
-            });
         }
+        
+    }
+
+
+
+
+    // Find any implicitly indirect exports and make them explicit.
+    //
+    // An explicitly indirect export is an export entry arising from an export
+    // statement of the following form:
+    //   export {a as c} from "X";
+    // An implicitly indirect export corresponds to
+    //   export {b as c};
+    // in the presence of an import statement of the form
+    //   import {a as b} from "X";
+    // This function finds such implicitly indirect export entries and rewrites
+    // them by filling in the import name and module request, as well as nulling
+    // out the local name.  Effectively, it turns
+    //   import {a as b} from "X"; export {b as c};
+    // into:
+    //   import {a as b} from "X"; export {a as c} from "X";
+    // (The import entry is never deleted.)
+    makeIndirectExportsExplicit() {
+
+    }
+}
+
+// export class ModuleStmt {
+//     private node: ts.Node
+//     private moduleRequest: string;
+//     private namespace: string = "";
+//     private bingdingNameMap: Map<string, string> = new Map<string, string>();
+//     private isCopy: boolean = true;
+
+//     constructor(node: ts.Node, moduleRequest: string = "") {
+//         this.node = node;
+//         this.moduleRequest = moduleRequest;
+//     }
+
+//     getNode() {
+//         return this.node;
+//     }
+
+//     getModuleRequest() {
+//         return this.moduleRequest;
+//     }
+
+//     addLocalName(localName: string, importName: string) {
+//         if (this.bingdingNameMap.has(localName)) {
+//             throw new DiagnosticError(this.node, DiagnosticCode.Duplicate_identifier_0, jshelpers.getSourceFileOfNode(this.node), [localName]);
+//         }
+//         this.bingdingNameMap.set(localName, importName);
+//     }
+
+//     getBindingNameMap() {
+//         return this.bingdingNameMap;
+//     }
+
+//     setNameSpace(namespace: string) {
+//         this.namespace = namespace;
+//     }
+
+//     getNameSpace() {
+//         return this.namespace;
+//     }
+
+//     setCopyFlag(isCopy: boolean) {
+//         this.isCopy = isCopy;
+//     }
+
+//     getCopyFlag() {
+//         return this.isCopy;
+//     }
+// }
+
+export function setModuleNamespaceImports(namespaceImportEntries: Array<Entry>, moduleScope: ModuleScope, pandagen: PandaGen) {
+    if (!(moduleScope instanceof ModuleScope)) {
+        return;
+    }
+    namespaceImportEntries.forEach(entry => {
+        pandagen.getModuleNamespace(entry.node, entry.moduleRequest);
+        let v = moduleScope.findLocal(entry.localName!)!;
+        pandagen.storeAccToLexEnv(entry.node, moduleScope, 0, v, true);
+        (<LocalVariable>v).initialize();
     })
-}
\ No newline at end of file
+}
+
+// export function setImportNameBindings(regularImportEntries: Map<string, Entry>, moduleScope: ModuleScope, pandagen: PandaGen) {
+//     regularImportEntries.forEach((importEntry: Entry, localName: string) => {
+//         let v = <LocalVariable>moduleScope.findLocal(localName)!;
+//         v.setExport();
+//         // pandagen.storeAccToLexEnv(importEntry.node, moduleScope, 0, v, true);
+//         (<LocalVariable>v).initialize();
+//     });
+// }
+
+// export function setExportBinding(exportStmts: Array<ModuleStmt>, moduleScope: ModuleScope, pandagen: PandaGen) {
+//     exportStmts.forEach((exportStmt) => {
+//         if (exportStmt.getModuleRequest()) {
+//             pandagen.importModule(exportStmt.getNode(), exportStmt.getModuleRequest());
+//             let moduleReg = pandagen.allocLocalVreg();
+//             pandagen.storeAccumulator(exportStmt.getNode(), moduleReg);
+
+//             if (!exportStmt.getCopyFlag()) {
+//                 if (exportStmt.getNameSpace()) {
+//                     pandagen.storeModuleVar(exportStmt.getNode(), exportStmt.getNameSpace());
+//                 }
+
+//                 let bindingNameMap = exportStmt.getBindingNameMap();
+//                 bindingNameMap.forEach((value: string, key: string) => {
+//                     pandagen.loadModuleVariable(exportStmt.getNode(), moduleReg, value);
+//                     pandagen.storeModuleVar(exportStmt.getNode(), key);
+//                 });
+//             } else {
+//                 pandagen.copyModule(exportStmt.getNode(), moduleReg);
+//             }
+//         } else {
+//             let bindingNameMap = exportStmt.getBindingNameMap();
+//             bindingNameMap.forEach((value: string, key: string) => {
+//                 let v = moduleScope.findLocal(value);
+//                 if (typeof v == 'undefined') {
+//                     throw new DiagnosticError(exportStmt.getNode(), DiagnosticCode.Cannot_export_0_Only_local_declarations_can_be_exported_from_a_module, jshelpers.getSourceFileOfNode(exportStmt.getNode()), [value]);
+//                 }
+
+//                 (<LocalVariable>v).setExport();
+//                 (<LocalVariable>v).setExportedName(key);
+//             });
+//         }
+//     })
+// }
diff --git a/ts2panda/src/pandagen.ts b/ts2panda/src/pandagen.ts
index 1b56905a..f8b54128 100644
--- a/ts2panda/src/pandagen.ts
+++ b/ts2panda/src/pandagen.ts
@@ -51,7 +51,7 @@ import {
     getIteratorNext,
     getNextPropName,
     getPropIterator,
-    importModule,
+    getModuleNamespace,
     isFalse,
     isTrue,
     jumpTarget,
@@ -1052,8 +1052,8 @@ export class PandaGen {
         )
     }
 
-    importModule(node: ts.Node, moduleName: string) {
-        this.add(node, importModule(moduleName));
+    getModuleNamespace(node: ts.Node, moduleIdx: number) {
+        this.add(node, getModuleNamespace(moduleIdx));
     }
 
     loadModuleVariable(node: ts.Node, module: VReg, varName: string) {
diff --git a/ts2panda/src/recorder.ts b/ts2panda/src/recorder.ts
index 387ddf83..2d42c247 100644
--- a/ts2panda/src/recorder.ts
+++ b/ts2panda/src/recorder.ts
@@ -15,14 +15,18 @@
 
 import ts from "typescript";
 import * as astutils from "./astutils";
-import { isAnonymousFunctionDefinition } from "./base/util";
+import {
+    isAnonymousFunctionDefinition,
+    hasDefaultKeywordModifier,
+    hasExportKeywordModifier
+} from "./base/util";
 import { CmdOptions } from "./cmdOptions";
 import { CompilerDriver } from "./compilerDriver";
 import { DiagnosticCode, DiagnosticError } from "./diagnostic";
 import { findOuterNodeOfParenthesis } from "./expression/parenthesizedExpression";
 import * as jshelpers from "./jshelpers";
 import { LOGD } from "./log";
-import { ModuleStmt } from "./modules";
+import { SourceTextModuleRecord } from "./modules";
 import {
     CatchParameter,
     ClassDecl,
@@ -35,6 +39,7 @@ import {
     LetDecl,
     LocalScope,
     LoopScope,
+    ModuleDecl,
     ModuleScope,
     Scope,
     VarDecl,
@@ -58,9 +63,7 @@ export class Recorder {
     private parametersMap: Map<ts.FunctionLikeDeclaration, FunctionParameter[]> = new Map<ts.FunctionLikeDeclaration, FunctionParameter[]>();
     private funcNameMap: Map<string, number>;
     private ClassGroupOfNoCtor: Array<ts.ClassLikeDeclaration> = new Array<ts.ClassLikeDeclaration>();
-    private importStmts: Array<ModuleStmt> = [];
-    private exportStmts: Array<ModuleStmt> = [];
-    private defaultUsed: boolean = false;
+    private moduleRecord: SourceTextModuleRecord | undefined;
 
     constructor(node: ts.Node, scope: Scope, compilerDriver: CompilerDriver) {
         this.node = node;
@@ -68,6 +71,9 @@ export class Recorder {
         this.compilerDriver = compilerDriver;
         this.funcNameMap = new Map<string, number>();
         this.funcNameMap.set("main", 1);
+        if (CmdOptions.isModules() && scope instanceof ModuleScope) {
+            this.moduleRecord = new SourceTextModuleRecord();
+        }
     }
 
     record() {
@@ -100,6 +106,12 @@ export class Recorder {
                     this.compilerDriver.getFuncId(<ts.FunctionDeclaration>childNode);
                     let functionScope = this.buildVariableScope(scope, <ts.FunctionLikeDeclaration>childNode);
                     this.recordFuncDecl(<ts.FunctionDeclaration>childNode, scope);
+                    if (hasExportKeywordModifier(childNode)) {
+                        if (!CmdOptions.isModules()) {
+                            throw new DiagnosticError(childNode, DiagnosticCode.An_export_declaration_can_only_be_used_in_a_module, jshelpers.getSourceFileOfNode(childNode));
+                        }
+                        this.recordExportInfo(<ts.FunctionDeclaration>childNode);
+                    }
                     this.recordInfo(childNode, functionScope);
                     break;
                 }
@@ -120,16 +132,35 @@ export class Recorder {
                 case ts.SyntaxKind.ForStatement:
                 case ts.SyntaxKind.ForInStatement:
                 case ts.SyntaxKind.ForOfStatement: {
-                    let loopScope: LoopScope = new LoopScope(scope);;
+                    let loopScope: LoopScope = new LoopScope(scope);
                     this.setScopeMap(childNode, loopScope);
                     this.recordInfo(childNode, loopScope);
                     break;
                 }
-                case ts.SyntaxKind.ClassDeclaration:
+                case ts.SyntaxKind.ClassDeclaration: {
+                    if (hasExportKeywordModifier(childNode) && scope instanceof ModuleScope) {
+                        if (!CmdOptions.isModules()) {
+                            throw new DiagnosticError(childNode, DiagnosticCode.An_export_declaration_can_only_be_used_in_a_module, jshelpers.getSourceFileOfNode(childNode));
+                        }
+                        this.recordExportInfo(<ts.ClassDeclaration>childNode);
+                    }
+                    this.recordClassInfo(<ts.ClassLikeDeclaration>childNode, scope);
+                    break;
+                }
                 case ts.SyntaxKind.ClassExpression: {
                     this.recordClassInfo(<ts.ClassLikeDeclaration>childNode, scope);
                     break;
                 }
+                case ts.SyntaxKind.VariableStatement: {
+                    if (hasExportKeywordModifier(childNode)) {
+                        this.recordExportInfo(<ts.VariableStatement>childNode);
+                    }
+                    // if (this.recordType) {
+                    //     TypeChecker.getInstance().formatNodeType(childNode);
+                    // }
+                    this.recordInfo(childNode, scope);
+                    break;
+                }
                 case ts.SyntaxKind.Identifier: {
                     this.recordVariableDecl(<ts.Identifier>childNode, scope);
                     break;
@@ -144,22 +175,19 @@ export class Recorder {
                     this.recordImportInfo(<ts.ImportDeclaration>childNode, scope);
                     break;
                 }
-                case ts.SyntaxKind.ExportDeclaration: {
+                case ts.SyntaxKind.ExportAssignment: {
                     if (!CmdOptions.isModules()) {
                         throw new DiagnosticError(childNode, DiagnosticCode.An_export_declaration_can_only_be_used_in_a_module, jshelpers.getSourceFileOfNode(childNode));
                     }
-                    if (!(scope instanceof ModuleScope)) {
-                        throw new Error("SyntaxError: export statement cannot in other scope except ModuleScope");
-                    }
                     this.recordExportInfo(<ts.ExportDeclaration>childNode);
+                    this.recordInfo(childNode, scope);
                     break;
                 }
-                case ts.SyntaxKind.ExportAssignment: {
-                    if (this.defaultUsed) {
-                        throw new DiagnosticError(childNode, DiagnosticCode.Duplicate_identifier_0, jshelpers.getSourceFileOfNode(childNode), ["default"]);
+                case ts.SyntaxKind.ExportDeclaration: {
+                    if (!CmdOptions.isModules()) {
+                        throw new DiagnosticError(childNode, DiagnosticCode.An_export_declaration_can_only_be_used_in_a_module, jshelpers.getSourceFileOfNode(childNode));
                     }
-                    this.defaultUsed = true;
-                    this.recordInfo(childNode, scope);
+                    this.recordExportInfo(<ts.ExportDeclaration>childNode);
                     break;
                 }
                 default:
@@ -282,81 +310,117 @@ export class Recorder {
         if (!ts.isStringLiteral(node.moduleSpecifier)) {
             throw new Error("moduleSpecifier must be a stringLiteral");
         }
-        let moduleRequest = jshelpers.getTextOfIdentifierOrLiteral(node.moduleSpecifier);
-        let importStmt = new ModuleStmt(node, moduleRequest);
+        let moduleRequest: string = jshelpers.getTextOfIdentifierOrLiteral(node.moduleSpecifier);
 
         if (node.importClause) {
             let importClause: ts.ImportClause = node.importClause;
-
             // import defaultExport from "a.js"
             if (importClause.name) {
-                let name = jshelpers.getTextOfIdentifierOrLiteral(importClause.name);
-                scope.setDecls(new ConstDecl(name, importClause.name));
-                importStmt.addLocalName(name, "default");
+                let localName = jshelpers.getTextOfIdentifierOrLiteral(importClause.name);
+                scope.setDecls(new ModuleDecl(localName, importClause.name));
+                this.moduleRecord!.addImportEntry(node.importClause, "default", localName, moduleRequest);
             }
 
-            // import { ... } from "a.js"
-            // import * as a from "a.js"
-            // import defaultExport, * as a from "a.js"
             if (importClause.namedBindings) {
                 let namedBindings = importClause.namedBindings;
                 // import * as a from "a.js"
                 if (ts.isNamespaceImport(namedBindings)) {
                     let nameSpace = jshelpers.getTextOfIdentifierOrLiteral((<ts.NamespaceImport>namedBindings).name);
-                    scope.setDecls(new ConstDecl(nameSpace, namedBindings));
-                    importStmt.setNameSpace(nameSpace);
-                }
-
-                // import { ... } from "a.js"
-                if (ts.isNamedImports(namedBindings)) {
-                    namedBindings.elements.forEach((element) => {
-                        let name: string = jshelpers.getTextOfIdentifierOrLiteral(element.name);
-                        let exoticName: string = element.propertyName ? jshelpers.getTextOfIdentifierOrLiteral(element.propertyName) : name;
-                        scope.setDecls(new ConstDecl(name, element));
-                        importStmt.addLocalName(name, exoticName);
+                    scope.setDecls(new ModuleDecl(nameSpace, namedBindings));
+                    this.moduleRecord!.addStarImportEntry(importClause.namedBindings, nameSpace, moduleRequest);
+                } else if (ts.isNamedImports(namedBindings)) {
+                    // import { ... } from "a.js"
+                    namedBindings.elements.forEach((element: any) => {
+                        let localName: string = jshelpers.getTextOfIdentifierOrLiteral(element.name);
+                        let importName: string = element.propertyName ? jshelpers.getTextOfIdentifierOrLiteral(element.propertyName) : localName;
+                        scope.setDecls(new ModuleDecl(localName, element));
+                        this.moduleRecord!.addImportEntry(element, importName, localName, moduleRequest);
                     });
+                } else {
+                    throw new Error("Unreachable kind for namedBindings");
                 }
             }
         }
-
-        this.importStmts.push(importStmt);
     }
 
-    private recordExportInfo(node: ts.ExportDeclaration) {
-        let exportStmt: ModuleStmt;
-        if (node.moduleSpecifier) {
-            if (!ts.isStringLiteral(node.moduleSpecifier)) {
-                throw new Error("moduleSpecifier must be a stringLiteral");
-            }
-            exportStmt = new ModuleStmt(node, jshelpers.getTextOfIdentifierOrLiteral(node.moduleSpecifier));
-        } else {
-            exportStmt = new ModuleStmt(node);
-        }
-
-        if (node.exportClause) {
-            exportStmt.setCopyFlag(false);
-            let namedBindings: ts.NamedExportBindings = node.exportClause;
-            if (ts.isNamespaceExport(namedBindings)) {
-                exportStmt.setNameSpace(jshelpers.getTextOfIdentifierOrLiteral((<ts.NamespaceExport>namedBindings).name));
-            }
-
-            if (ts.isNamedExports(namedBindings)) {
-                namedBindings.elements.forEach((element) => {
-                    let name: string = jshelpers.getTextOfIdentifierOrLiteral(element.name);
-                    if (name == 'default') {
-                        if (this.defaultUsed) {
-                            throw new DiagnosticError(node, DiagnosticCode.Duplicate_identifier_0, jshelpers.getSourceFileOfNode(node), [name]);
-                        } else {
-                            this.defaultUsed = true;
+    private recordExportInfo(node: ts.ExportDeclaration | ts.ExportAssignment | ts.VariableStatement | ts.FunctionDeclaration | ts.ClassDeclaration) {
+        switch (node.kind) {
+            case ts.SyntaxKind.ExportDeclaration: {
+                if (node.moduleSpecifier) {
+                    if (!ts.isStringLiteral(node.moduleSpecifier)) {
+                        throw new Error("moduleSpecifier must be a stringLiteral");
+                    }
+                    let moduleRequest: string = jshelpers.getTextOfIdentifierOrLiteral(node.moduleSpecifier);
+
+                    if (node.exportClause) {
+                        let namedBindings: ts.NamedExportBindings = node.exportClause;
+                        if (ts.isNamespaceExport(namedBindings)) {
+                            // export * as m from "mod";
+                            // `export namespace` is not the ECMA2018's feature
+                        } else if (ts.isNamedExports(namedBindings)) {
+                            // export {x} from "mod";
+                            // export {v as x} from "mod";
+                            namedBindings.elements.forEach((element: any) => {
+                                let exportName: string = jshelpers.getTextOfIdentifierOrLiteral(element.name);
+                                let importName: string = element.propertyName ? jshelpers.getTextOfIdentifierOrLiteral(element.propertyName) : exportName;
+                                this.moduleRecord!.addIndirectExportEntry(element, importName, exportName, moduleRequest);
+                            });
                         }
+                    } else {
+                        // export * from "mod";
+                        this.moduleRecord!.addStarExportEntry(node, moduleRequest);
                     }
-                    let exoticName: string = element.propertyName ? jshelpers.getTextOfIdentifierOrLiteral(element.propertyName) : name;
-                    exportStmt.addLocalName(name, exoticName);
+                } else if (node.exportClause && ts.isNamedExports(node.exportClause)) {
+                    // export {x};
+                    // export {v as x};
+                    node.exportClause.elements.forEach((element: any) => {
+                        let exportName: string = jshelpers.getTextOfIdentifierOrLiteral(element.name);
+                        let localName: string = element.propertyName ? jshelpers.getTextOfIdentifierOrLiteral(element.propertyName) : exportName;
+                        this.moduleRecord!.addLocalExportEntry(element, exportName, localName);
+                    });
+                } else {
+                    throw new Error("Unreachable node kind for Export Declaration");
+                }
+                break;
+            }
+            case ts.SyntaxKind.ExportAssignment: {
+                // export default 42;
+                // export default v;
+                // "*default*" is used within this specification as a synthetic name for anonymous default export values.
+                this.moduleRecord!.addLocalExportEntry(node, "default", "*default*");
+                break;
+            }
+            case ts.SyntaxKind.VariableStatement: {
+                // export var a,b;
+                node.declarationList.declarations.forEach(decl => {
+                    let name = jshelpers.getTextOfIdentifierOrLiteral(decl.name);
+                    this.moduleRecord!.addLocalExportEntry(decl, name, name);
                 });
+                break;
             }
+            case ts.SyntaxKind.FunctionDeclaration:
+            case ts.SyntaxKind.ClassDeclaration: {
+                if (hasDefaultKeywordModifier(node)) {
+                    // HoistableDeclaration : FunctionDecl/GeneratorDecl/AsyncFunctionDecl/AsyncGeneratorDecl
+                    // export default function f(){}
+                    // export default function(){}
+                    // export default class{}
+                    let localName = node.name ? jshelpers.getTextOfIdentifierOrLiteral(node.name) : "*default*";
+                    this.moduleRecord!.addLocalExportEntry(node, "default", localName);
+                } else {
+                    // export function f(){}
+                    // export class c{}
+                    if (!node.name) {
+                        // throw an syntax Error !!!
+                    }
+                    let name = jshelpers.getTextOfIdentifierOrLiteral(node.name!);
+                    this.moduleRecord!.addLocalExportEntry(node, name, name);
+                }
+                break;
+            }
+            default:
+                throw new Error("Unreachable syntax kind for static exporting");
         }
-
-        this.exportStmts.push(exportStmt);
     }
 
     private recordFuncDecl(node: ts.FunctionDeclaration, scope: Scope) {
@@ -371,6 +435,7 @@ export class Recorder {
         let funcDecl = new FuncDecl(funcName, node, this.compilerDriver.getFuncId(node));
         scope.setDecls(funcDecl);
         let hoistScope = scope;
+        // Wrong logic with ModuleScope
         if (scope instanceof GlobalScope || scope instanceof ModuleScope) {
             this.collectHoistDecls(node, <GlobalScope | ModuleScope>hoistScope, funcDecl);
         } else if (scope instanceof LocalScope) {
@@ -523,12 +588,8 @@ export class Recorder {
         return this.scopeMap.get(node);
     }
 
-    getImportStmts() {
-        return this.importStmts;
-    }
-
-    getExportStmts() {
-        return this.exportStmts;
+    getModuleRecord() {
+        return this.moduleRecord;
     }
 
     setHoistMap(scope: VariableScope, decl: Decl) {
@@ -568,4 +629,4 @@ export class Recorder {
     getFuncNameMap() {
         return this.funcNameMap;
     }
-}
\ No newline at end of file
+}
diff --git a/ts2panda/src/scope.ts b/ts2panda/src/scope.ts
index 44cde853..dc9979d2 100644
--- a/ts2panda/src/scope.ts
+++ b/ts2panda/src/scope.ts
@@ -54,6 +54,12 @@ export class ConstDecl extends Decl {
     }
 }
 
+export class ModuleDecl extends Decl {
+    constructor(constName: string, node: ts.Node) {
+        super(constName, node);
+    }
+}
+
 export class FuncDecl extends Decl {
     readonly index: number;
     constructor(funcName: string, node: ts.Node, index: number) {
@@ -386,7 +392,13 @@ export class ModuleScope extends VariableScope {
         } else if (declKind == VarDeclarationKind.VAR || declKind == VarDeclarationKind.FUNCTION) {
             v = new LocalVariable(declKind, name);
             this.locals.push(v);
-        } else {
+        } 
+
+        else if (declKind == VarDeclarationKind.MODULE) {
+            
+        }
+        
+        else {
             v = new LocalVariable(declKind, name, status);
             this.locals.push(v);
         }
diff --git a/ts2panda/src/variable.ts b/ts2panda/src/variable.ts
index eba622a9..779eac3c 100644
--- a/ts2panda/src/variable.ts
+++ b/ts2panda/src/variable.ts
@@ -101,8 +101,7 @@ export abstract class Variable {
 
 export class LocalVariable extends Variable {
     status: InitStatus | null;
-    isExport: boolean = false;
-    exportedName: string = "";
+    private isExport: boolean = false;
 
     constructor(declKind: VarDeclarationKind, name: string, status?: InitStatus) {
         super(declKind, name);
@@ -127,17 +126,10 @@ export class LocalVariable extends Variable {
     isExportVar() {
         return this.isExport;
     }
+}
 
-    setExportedName(name: string) {
-        this.exportedName = name;
-    }
-
-    getExportedName() {
-        if (!this.exportedName) {
-            throw new Error("Exported Variable " + this.getName() + " doesn't have exported name");
-        }
-        return this.exportedName;
-    }
+export class ModuleVariable extends Variable {
+    
 }
 
 export class GlobalVariable extends Variable {
